{"ast":null,"code":"const CLIENT_ID = process.env.REACT_APP_GOOGLE_CLIENT_ID;\nconst API_KEY = process.env.REACT_APP_GOOGLE_API_KEY;\nconst DISCOVERY_DOC = 'https://www.googleapis.com/discovery/v1/apis/calendar/v3/rest';\nconst SCOPES = 'https://www.googleapis.com/auth/calendar';\nclass GoogleCalendarService {\n  static async initClient() {\n    if (window.gapi) {\n      this.gapi = window.gapi;\n      await this.gapi.load('client:auth2', async () => {\n        await this.gapi.client.init({\n          apiKey: API_KEY,\n          clientId: CLIENT_ID,\n          discoveryDocs: [DISCOVERY_DOC],\n          scope: SCOPES\n        });\n      });\n    } else {\n      throw new Error('Google API not loaded');\n    }\n  }\n  static async handleAuthClick() {\n    if (!this.gapi) {\n      throw new Error('Google API not initialized');\n    }\n    const authInstance = this.gapi.auth2.getAuthInstance();\n    const user = await authInstance.signIn();\n    return user.getAuthResponse().access_token;\n  }\n  static async getEvents(token, timeMin, timeMax) {\n    try {\n      const response = await fetch(`https://www.googleapis.com/calendar/v3/calendars/primary/events?timeMin=${timeMin.toISOString()}&timeMax=${timeMax.toISOString()}&singleEvents=true&orderBy=startTime`, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      if (!response.ok) {\n        throw new Error(`Failed to fetch events: ${response.statusText}`);\n      }\n      const data = await response.json();\n      return data.items.map(event => ({\n        id: event.id,\n        title: event.summary,\n        start: event.start.dateTime || event.start.date,\n        end: event.end.dateTime || event.end.date,\n        description: event.description || ''\n      }));\n    } catch (error) {\n      throw new Error(`Failed to fetch Google Calendar events: ${error.message}`);\n    }\n  }\n  static async updateEvent(token, eventId, eventData) {\n    const response = await fetch(`https://www.googleapis.com/calendar/v3/calendars/primary/events/${eventId}`, {\n      method: 'PUT',\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        summary: eventData.title,\n        start: {\n          dateTime: eventData.start\n        },\n        end: {\n          dateTime: eventData.end\n        },\n        description: eventData.description\n      })\n    });\n    if (!response.ok) {\n      throw new Error(`Failed to update event: ${response.statusText}`);\n    }\n    const updatedEvent = await response.json();\n    return {\n      id: updatedEvent.id,\n      title: updatedEvent.summary,\n      start: updatedEvent.start.dateTime || updatedEvent.start.date,\n      end: updatedEvent.end.dateTime || updatedEvent.end.date,\n      description: updatedEvent.description || ''\n    };\n  }\n  static async deleteEvent(token, eventId) {\n    const response = await fetch(`https://www.googleapis.com/calendar/v3/calendars/primary/events/${eventId}`, {\n      method: 'DELETE',\n      headers: {\n        'Authorization': `Bearer ${token}`\n      }\n    });\n    if (!response.ok) {\n      throw new Error(`Failed to delete event: ${response.statusText}`);\n    }\n  }\n}\nGoogleCalendarService.gapi = null;\nexport default GoogleCalendarService;","map":{"version":3,"names":["CLIENT_ID","process","env","REACT_APP_GOOGLE_CLIENT_ID","API_KEY","REACT_APP_GOOGLE_API_KEY","DISCOVERY_DOC","SCOPES","GoogleCalendarService","initClient","window","gapi","load","client","init","apiKey","clientId","discoveryDocs","scope","Error","handleAuthClick","authInstance","auth2","getAuthInstance","user","signIn","getAuthResponse","access_token","getEvents","token","timeMin","timeMax","response","fetch","toISOString","headers","ok","statusText","data","json","items","map","event","id","title","summary","start","dateTime","date","end","description","error","message","updateEvent","eventId","eventData","method","body","JSON","stringify","updatedEvent","deleteEvent"],"sources":["/home/joebutler/Downloads/lifesync-master/src/services/GoogleCalendarService.js"],"sourcesContent":["const CLIENT_ID = process.env.REACT_APP_GOOGLE_CLIENT_ID;\nconst API_KEY = process.env.REACT_APP_GOOGLE_API_KEY;\nconst DISCOVERY_DOC = 'https://www.googleapis.com/discovery/v1/apis/calendar/v3/rest';\nconst SCOPES = 'https://www.googleapis.com/auth/calendar';\n\nclass GoogleCalendarService {\n  static gapi = null;\n\n  static async initClient() {\n    if (window.gapi) {\n      this.gapi = window.gapi;\n      await this.gapi.load('client:auth2', async () => {\n        await this.gapi.client.init({\n          apiKey: API_KEY,\n          clientId: CLIENT_ID,\n          discoveryDocs: [DISCOVERY_DOC],\n          scope: SCOPES\n        });\n      });\n    } else {\n      throw new Error('Google API not loaded');\n    }\n  }\n\n  static async handleAuthClick() {\n    if (!this.gapi) {\n      throw new Error('Google API not initialized');\n    }\n\n    const authInstance = this.gapi.auth2.getAuthInstance();\n    const user = await authInstance.signIn();\n    return user.getAuthResponse().access_token;\n  }\n\n  static async getEvents(token, timeMin, timeMax) {\n    try {\n      const response = await fetch(\n        `https://www.googleapis.com/calendar/v3/calendars/primary/events?timeMin=${timeMin.toISOString()}&timeMax=${timeMax.toISOString()}&singleEvents=true&orderBy=startTime`,\n        {\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        }\n      );\n\n      if (!response.ok) {\n        throw new Error(`Failed to fetch events: ${response.statusText}`);\n      }\n\n      const data = await response.json();\n      return data.items.map(event => ({\n        id: event.id,\n        title: event.summary,\n        start: event.start.dateTime || event.start.date,\n        end: event.end.dateTime || event.end.date,\n        description: event.description || ''\n      }));\n    } catch (error) {\n      throw new Error(`Failed to fetch Google Calendar events: ${error.message}`);\n    }\n  }\n\n  static async updateEvent(token, eventId, eventData) {\n    const response = await fetch(\n      `https://www.googleapis.com/calendar/v3/calendars/primary/events/${eventId}`,\n      {\n        method: 'PUT',\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          summary: eventData.title,\n          start: { dateTime: eventData.start },\n          end: { dateTime: eventData.end },\n          description: eventData.description\n        })\n      }\n    );\n\n    if (!response.ok) {\n      throw new Error(`Failed to update event: ${response.statusText}`);\n    }\n\n    const updatedEvent = await response.json();\n    return {\n      id: updatedEvent.id,\n      title: updatedEvent.summary,\n      start: updatedEvent.start.dateTime || updatedEvent.start.date,\n      end: updatedEvent.end.dateTime || updatedEvent.end.date,\n      description: updatedEvent.description || ''\n    };\n  }\n\n  static async deleteEvent(token, eventId) {\n    const response = await fetch(\n      `https://www.googleapis.com/calendar/v3/calendars/primary/events/${eventId}`,\n      {\n        method: 'DELETE',\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      }\n    );\n\n    if (!response.ok) {\n      throw new Error(`Failed to delete event: ${response.statusText}`);\n    }\n  }\n}\n\nexport default GoogleCalendarService;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}