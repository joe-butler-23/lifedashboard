{"ast":null,"code":"var _jsxFileName = \"/home/joebutler/Downloads/lifesync-master/src/components/EnhancedDateInput.jsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EnhancedDateInput = ({\n  value,\n  onChange,\n  placeholder,\n  mode,\n  onModeChange\n}) => {\n  const handleDateChange = e => {\n    onChange(e.target.value);\n  };\n  const handleModeToggle = () => {\n    onModeChange(mode === 'natural' ? 'picker' : 'natural');\n  };\n  const formatDateForInput = dateValue => {\n    if (!dateValue) return '';\n    if (mode === 'picker') {\n      const date = new Date(dateValue);\n      if (!isNaN(date.getTime())) {\n        return date.toISOString().split('T')[0];\n      }\n    }\n    return dateValue;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"space-y-2\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-between\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"block text-gray-700 text-sm font-bold\",\n        children: \"Due Date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleModeToggle,\n        className: \"text-xs text-blue-600 hover:text-blue-800\",\n        children: mode === 'natural' ? 'Use Date Picker' : 'Use Natural Language'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), mode === 'natural' ? /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n      value: value,\n      onChange: handleDateChange,\n      placeholder: placeholder || 'e.g., today, tomorrow, next monday, 2024-12-31'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"date\",\n      className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n      value: formatDateForInput(value),\n      onChange: handleDateChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-xs text-gray-500\",\n      children: mode === 'natural' ? 'Try: today, tomorrow, next monday, in 2 weeks, 2024-12-31' : 'Select a date from the calendar'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_c = EnhancedDateInput;\nexport default EnhancedDateInput;\nvar _c;\n$RefreshReg$(_c, \"EnhancedDateInput\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","EnhancedDateInput","value","onChange","placeholder","mode","onModeChange","handleDateChange","e","target","handleModeToggle","formatDateForInput","dateValue","date","Date","isNaN","getTime","toISOString","split","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onClick","_c","$RefreshReg$"],"sources":["/home/joebutler/Downloads/lifesync-master/src/components/EnhancedDateInput.jsx"],"sourcesContent":["import React from 'react';\n\nconst EnhancedDateInput = ({ value, onChange, placeholder, mode, onModeChange }) => {\n  const handleDateChange = (e) => {\n    onChange(e.target.value);\n  };\n\n  const handleModeToggle = () => {\n    onModeChange(mode === 'natural' ? 'picker' : 'natural');\n  };\n\n  const formatDateForInput = (dateValue) => {\n    if (!dateValue) return '';\n    if (mode === 'picker') {\n      const date = new Date(dateValue);\n      if (!isNaN(date.getTime())) {\n        return date.toISOString().split('T')[0];\n      }\n    }\n    return dateValue;\n  };\n\n  return (\n    <div className=\"space-y-2\">\n      <div className=\"flex items-center justify-between\">\n        <label className=\"block text-gray-700 text-sm font-bold\">\n          Due Date\n        </label>\n        <button\n          type=\"button\"\n          onClick={handleModeToggle}\n          className=\"text-xs text-blue-600 hover:text-blue-800\"\n        >\n          {mode === 'natural' ? 'Use Date Picker' : 'Use Natural Language'}\n        </button>\n      </div>\n\n      {mode === 'natural' ? (\n        <input\n          type=\"text\"\n          className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n          value={value}\n          onChange={handleDateChange}\n          placeholder={placeholder || 'e.g., today, tomorrow, next monday, 2024-12-31'}\n        />\n      ) : (\n        <input\n          type=\"date\"\n          className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n          value={formatDateForInput(value)}\n          onChange={handleDateChange}\n        />\n      )}\n\n      <div className=\"text-xs text-gray-500\">\n        {mode === 'natural'\n          ? 'Try: today, tomorrow, next monday, in 2 weeks, 2024-12-31'\n          : 'Select a date from the calendar'}\n      </div>\n    </div>\n  );\n};\n\nexport default EnhancedDateInput;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,iBAAiB,GAAGA,CAAC;EAAEC,KAAK;EAAEC,QAAQ;EAAEC,WAAW;EAAEC,IAAI;EAAEC;AAAa,CAAC,KAAK;EAClF,MAAMC,gBAAgB,GAAIC,CAAC,IAAK;IAC9BL,QAAQ,CAACK,CAAC,CAACC,MAAM,CAACP,KAAK,CAAC;EAC1B,CAAC;EAED,MAAMQ,gBAAgB,GAAGA,CAAA,KAAM;IAC7BJ,YAAY,CAACD,IAAI,KAAK,SAAS,GAAG,QAAQ,GAAG,SAAS,CAAC;EACzD,CAAC;EAED,MAAMM,kBAAkB,GAAIC,SAAS,IAAK;IACxC,IAAI,CAACA,SAAS,EAAE,OAAO,EAAE;IACzB,IAAIP,IAAI,KAAK,QAAQ,EAAE;MACrB,MAAMQ,IAAI,GAAG,IAAIC,IAAI,CAACF,SAAS,CAAC;MAChC,IAAI,CAACG,KAAK,CAACF,IAAI,CAACG,OAAO,CAAC,CAAC,CAAC,EAAE;QAC1B,OAAOH,IAAI,CAACI,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;MACzC;IACF;IACA,OAAON,SAAS;EAClB,CAAC;EAED,oBACEZ,OAAA;IAAKmB,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBpB,OAAA;MAAKmB,SAAS,EAAC,mCAAmC;MAAAC,QAAA,gBAChDpB,OAAA;QAAOmB,SAAS,EAAC,uCAAuC;QAAAC,QAAA,EAAC;MAEzD;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACRxB,OAAA;QACEyB,IAAI,EAAC,QAAQ;QACbC,OAAO,EAAEhB,gBAAiB;QAC1BS,SAAS,EAAC,2CAA2C;QAAAC,QAAA,EAEpDf,IAAI,KAAK,SAAS,GAAG,iBAAiB,GAAG;MAAsB;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1D,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,EAELnB,IAAI,KAAK,SAAS,gBACjBL,OAAA;MACEyB,IAAI,EAAC,MAAM;MACXN,SAAS,EAAC,4HAA4H;MACtIjB,KAAK,EAAEA,KAAM;MACbC,QAAQ,EAAEI,gBAAiB;MAC3BH,WAAW,EAAEA,WAAW,IAAI;IAAiD;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9E,CAAC,gBAEFxB,OAAA;MACEyB,IAAI,EAAC,MAAM;MACXN,SAAS,EAAC,4HAA4H;MACtIjB,KAAK,EAAES,kBAAkB,CAACT,KAAK,CAAE;MACjCC,QAAQ,EAAEI;IAAiB;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5B,CACF,eAEDxB,OAAA;MAAKmB,SAAS,EAAC,uBAAuB;MAAAC,QAAA,EACnCf,IAAI,KAAK,SAAS,GACf,2DAA2D,GAC3D;IAAiC;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACG,EAAA,GA3DI1B,iBAAiB;AA6DvB,eAAeA,iBAAiB;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}