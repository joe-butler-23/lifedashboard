{"ast":null,"code":"var _jsxFileName = \"/home/joebutler/Downloads/lifesync-master/src/App.js\",\n  _s = $RefreshSig$();\n// The code modification enhances Todoist integration by adding token validation and improved error logging.\n\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport { Calendar, CheckSquare, GripVertical, Utensils, Dumbbell } from \"lucide-react\";\nimport { ClaudeProvider } from \"./hooks/useClaudeIntegration\";\n\n// Import services\nimport TodoistService from \"./services/TodoistService\";\nimport GoogleCalendarService from \"./services/GoogleCalendarService\";\n\n// Import components\nimport Sidebar from \"./components/common/Sidebar\";\nimport Dashboard from \"./components/Dashboard\";\nimport TasksView from \"./components/TasksView\";\nimport Settings from \"./components/Settings\";\nimport ClaudeAssistant from \"./components/ClaudeAssistant\";\nimport EditTaskModal from \"./components/tasks/EditTaskModal\";\nimport EditEventModal from \"./components/events/EditEventModal\";\n\n// Import utilities and constants\nimport { toDateKey, parseDateKey, formatWeekRange, getWeekDates } from \"./utils/dateUtils\";\nimport { filterTasksByString } from \"./utils/taskUtils\";\nimport { mockRecipes, mockWorkouts } from \"./constants/mockData\";\n\n// Debug flag\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst DEBUG = false;\nfunction App() {\n  _s();\n  // View state\n  const [activeView, setActiveView] = useState(\"dashboard\");\n  const [isClaudeSidebarOpen, setIsClaudeSidebarOpen] = useState(false);\n  const [claudeSidebarWidth, setClaudeSidebarWidth] = useState(384); // Default width: 24rem * 16px/rem = 384px\n\n  // Integration tokens/states\n  const [todoistToken, setTodoistToken] = useState(() => {\n    return localStorage.getItem(\"todoistToken\") || \"\";\n  });\n  const [googleCalendarToken, setGoogleCalendarToken] = useState(() => {\n    return localStorage.getItem(\"googleCalendarToken\") || \"\";\n  });\n  const [claudeApiKey, setClaudeApiKey] = useState(() => {\n    return localStorage.getItem(\"claude_api_key\") || \"\";\n  });\n\n  // Data states\n  const [todoistTasks, setTodoistTasks] = useState([]);\n  const [googleCalendarEvents, setGoogleCalendarEvents] = useState([]);\n  const [availableProjects, setAvailableProjects] = useState([]);\n\n  // Loading and error states\n  const [loadingTodoistTasks, setLoadingTodoistTasks] = useState(false);\n  const [loadingGoogleCalendarEvents, setLoadingGoogleCalendarEvents] = useState(false);\n  const [todoistError, setTodoistError] = useState(null);\n  const [googleCalendarError, setGoogleCalendarError] = useState(null);\n  const [claudeApiError, setClaudeApiError] = useState(null);\n\n  // Week navigation state\n  const [currentWeekStart, setCurrentWeekStart] = useState(() => {\n    const today = new Date();\n    const dayOfWeek = today.getDay();\n    const startOfWeek = new Date(today);\n    startOfWeek.setDate(today.getDate() - dayOfWeek);\n    startOfWeek.setHours(0, 0, 0, 0);\n    return startOfWeek;\n  });\n\n  // Derived state\n  const tasks = todoistTasks;\n  const weekDates = getWeekDates(currentWeekStart);\n  const unscheduledTasks = tasks.filter(task => !task.due && !task.completed);\n\n  // Todoist Integration\n  const fetchTodoistTasks = useCallback(async token => {\n    if (!token) return;\n    setLoadingTodoistTasks(true);\n    setTodoistError(null);\n    try {\n      const [fetchedTasks, fetchedProjects] = await Promise.all([TodoistService.getTasks(token), TodoistService.getProjects(token)]);\n      const projectMap = {};\n      fetchedProjects.forEach(project => {\n        projectMap[project.id] = project.name;\n      });\n      const formattedTasks = fetchedTasks.map(task => {\n        return {\n          id: task.id,\n          title: task.content,\n          // Todoist uses 'content' for task title\n          content: task.content,\n          // Also keep content for consistency\n          description: task.description || \"\",\n          // Task description\n          completed: task.is_completed || false,\n          // REST API uses 'is_completed'\n          priority: task.priority,\n          // Todoist priority (1-4, 4 is highest)\n          source: \"todoist\",\n          due: task.due ? task.due.date || task.due.datetime : null,\n          // Extract due date if available\n          project_id: task.project_id || null,\n          project_name: task.project_id ? projectMap[task.project_id] : null,\n          // Only set if actually has a project\n          labels: task.labels || [] // Task labels\n        };\n      });\n      setTodoistTasks(formattedTasks);\n\n      // Set available projects (only actual projects, no Inbox)\n      const projects = fetchedProjects.map(project => ({\n        id: project.id,\n        name: project.name\n      }));\n      setAvailableProjects(projects);\n      localStorage.setItem(\"todoistToken\", token); // Save token only if fetch is successful\n    } catch (error) {\n      setTodoistError(error);\n      console.error(\"Failed to fetch Todoist tasks:\", error);\n    } finally {\n      setLoadingTodoistTasks(false);\n    }\n  }, [setLoadingTodoistTasks, setTodoistError, setTodoistTasks, setAvailableProjects]);\n  useEffect(() => {\n    if (todoistToken) {\n      fetchTodoistTasks(todoistToken);\n    }\n  }, [todoistToken, fetchTodoistTasks]);\n  const fetchGoogleCalendarEvents = useCallback(async token => {\n    if (!token) return;\n    setLoadingGoogleCalendarEvents(true);\n    setGoogleCalendarError(null);\n    try {\n      const events = await GoogleCalendarService.getEvents(token, new Date(currentWeekStart), new Date(currentWeekStart.getTime() + 7 * 24 * 60 * 60 * 1000));\n      setGoogleCalendarEvents(events);\n      localStorage.setItem(\"googleCalendarToken\", token);\n    } catch (error) {\n      setGoogleCalendarError(error);\n      console.error(\"Failed to fetch Google Calendar events:\", error);\n    } finally {\n      setLoadingGoogleCalendarEvents(false);\n    }\n  }, [currentWeekStart, setLoadingGoogleCalendarEvents, setGoogleCalendarError]);\n  useEffect(() => {\n    const initGoogleCalendar = async () => {\n      try {\n        await GoogleCalendarService.initClient();\n        if (googleCalendarToken) {\n          // Attempt to fetch events if a token already exists (e.g., from localStorage)\n          // This might require a silent re-authentication or token refresh\n          fetchGoogleCalendarEvents(googleCalendarToken);\n        }\n      } catch (error) {\n        setGoogleCalendarError(new Error(`Failed to initialize Google Calendar client: ${error.message}`));\n        console.error(\"Google Calendar init error:\", error);\n      }\n    };\n    initGoogleCalendar();\n  }, [googleCalendarToken, fetchGoogleCalendarEvents]);\n\n  // Polling for Todoist tasks every 5 minutes\n  useEffect(() => {\n    let pollingInterval;\n    if (todoistToken) {\n      pollingInterval = setInterval(() => {\n        fetchTodoistTasks(todoistToken);\n      }, 5 * 60 * 1000); // 5 minutes\n    }\n    return () => clearInterval(pollingInterval);\n  }, [todoistToken, fetchTodoistTasks]);\n\n  // Polling for Google Calendar events every 5 minutes\n  useEffect(() => {\n    let pollingInterval;\n    if (googleCalendarToken) {\n      pollingInterval = setInterval(() => {\n        fetchGoogleCalendarEvents(googleCalendarToken);\n      }, 5 * 60 * 1000); // 5 minutes\n    }\n    return () => clearInterval(pollingInterval);\n  }, [googleCalendarToken, currentWeekStart, fetchGoogleCalendarEvents]); // Re-fetch if week changes\n\n  const handleGoogleAuthClick = async () => {\n    try {\n      const token = await GoogleCalendarService.handleAuthClick();\n      setGoogleCalendarToken(token);\n      fetchGoogleCalendarEvents(token);\n    } catch (error) {\n      setGoogleCalendarError(error);\n      console.error(\"Google authentication failed:\", error);\n    }\n  };\n  const handleSaveClaudeApiKey = () => {\n    if (claudeApiKey.trim()) {\n      localStorage.setItem(\"claude_api_key\", claudeApiKey);\n      setClaudeApiError(null);\n      // You can add validation here if needed\n    } else {\n      setClaudeApiError(new Error(\"Please enter a valid Anthropic API key.\"));\n    }\n  };\n  const handleSaveTodoistToken = () => {\n    if (todoistToken) {\n      fetchTodoistTasks(todoistToken);\n    } else {\n      setTodoistError(new Error(\"Please enter a Todoist API token.\"));\n    }\n  };\n  const [showAddTaskModal, setShowAddTaskModal] = useState(false);\n  const [newTaskContent, setNewTaskContent] = useState(\"\");\n  const [newTaskPriority, setNewTaskPriority] = useState(1);\n  const [newTaskDueDate, setNewTaskDueDate] = useState(\"\");\n  const [newTaskDueDateMode, setNewTaskDueDateMode] = useState(\"natural\"); // 'natural' or 'picker'\n\n  const [showEditTaskModal, setShowEditTaskModal] = useState(false);\n  const [editingTask, setEditingTask] = useState(null); // Stores the task being edited\n\n  // Calendar event editing states\n  const [showEditEventModal, setShowEditEventModal] = useState(false);\n  const [editingEvent, setEditingEvent] = useState(null); // Stores the event being edited\n\n  // Filter and sort states - support multiple active filters\n  const [activeFilters, setActiveFilters] = useState(new Set([\"all\"])); // Set of active filter keys\n  const [sortBy, setSortBy] = useState(\"default\"); // 'default', 'date', 'priority', 'alphabetical'\n  const [groupBy, setGroupBy] = useState(\"none\"); // 'none', 'project', 'priority', 'date', 'label'\n  const [selectedProjects, setSelectedProjects] = useState(new Set()); // Set of selected project IDs\n\n  // Weekly planner state\n  const [plannerMode, setPlannerMode] = useState(\"tasks\"); // 'tasks', 'recipes', 'workouts', 'all'\n  const [taskOrder, setTaskOrder] = useState({}); // Store task order by date\n  const [scheduledRecipes, setScheduledRecipes] = useState({}); // Store scheduled recipes by date and meal type\n  const [scheduledWorkouts, setScheduledWorkouts] = useState({}); // Store scheduled workouts by date\n  const [taskFilter, setTaskFilter] = useState(\"all\"); // 'all', 'bridge_club', 'home', 'urgent'\n\n  // Day Planner state\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [showDatePicker, setShowDatePicker] = useState(false);\n  const [scratchpadContent, setScratchpadContent] = useState(() => {\n    const dateKey = new Date().toLocaleDateString('en-CA'); // YYYY-MM-DD format\n    const stored = localStorage.getItem(`scratchpad-${dateKey}`);\n    return stored || JSON.stringify({\n      id: 'root',\n      content: '',\n      children: []\n    });\n  });\n  const [dayTaskFilter, setDayTaskFilter] = useState(\"all\"); // 'all', 'bridge_club', 'home', 'uncategorised'\n\n  // Sidebar state\n  const [isSidebarCollapsed, setIsSidebarCollapsed] = useState(false);\n\n  // Load scratchpad content when selected date changes\n  useEffect(() => {\n    const dateKey = selectedDate.toLocaleDateString('en-CA'); // YYYY-MM-DD format\n    const stored = localStorage.getItem(`scratchpad-${dateKey}`);\n    setScratchpadContent(stored || JSON.stringify({\n      id: 'root',\n      content: '',\n      children: []\n    }));\n  }, [selectedDate]);\n\n  // Week navigation utilities (now imported from dateUtils)\n\n  const navigateWeek = direction => {\n    const newWeekStart = new Date(currentWeekStart);\n    newWeekStart.setDate(currentWeekStart.getDate() + direction * 7);\n    setCurrentWeekStart(newWeekStart);\n  };\n  const getTasksForDate = date => {\n    const dateString = toDateKey(date);\n    const dayTasks = tasks.filter(task => task.due && task.due.startsWith(dateString) && !task.completed);\n\n    // Apply custom ordering if it exists\n    const order = taskOrder[dateString];\n    if (order && order.length > 0) {\n      const orderedTasks = [];\n      const unorderedTasks = [];\n\n      // First, add tasks in the specified order\n      order.forEach(taskId => {\n        const task = dayTasks.find(t => t.id === taskId);\n        if (task) {\n          orderedTasks.push(task);\n        }\n      });\n\n      // Then add any tasks that aren't in the order (new tasks)\n      dayTasks.forEach(task => {\n        if (!order.includes(task.id)) {\n          unorderedTasks.push(task);\n        }\n      });\n      return [...orderedTasks, ...unorderedTasks];\n    }\n    return dayTasks;\n  };\n  const handleTaskDrop = useCallback(async (taskId, targetDate, insertPosition = null) => {\n    if (!todoistToken) {\n      setTodoistError(new Error(\"Todoist API token is not set.\"));\n      return;\n    }\n\n    // Update local state immediately (optimistic update)\n    const newDueDate = targetDate ? toDateKey(targetDate) : null;\n    setTodoistTasks(prevTasks => prevTasks.map(task => task.id === taskId ? {\n      ...task,\n      due: newDueDate\n    } : task));\n\n    // Handle reordering and cross-column positioning\n    if (targetDate && insertPosition !== null) {\n      const dateKey = toDateKey(targetDate);\n      setTaskOrder(prevOrder => {\n        const newOrderState = {\n          ...prevOrder\n        };\n\n        // Remove task from all existing orders (in case it's moving between columns)\n        Object.keys(newOrderState).forEach(key => {\n          const order = newOrderState[key];\n          const taskIndex = order.indexOf(taskId);\n          if (taskIndex > -1) {\n            newOrderState[key] = order.filter(id => id !== taskId);\n          }\n        });\n\n        // Get current order for target date\n        const currentOrder = newOrderState[dateKey] || [];\n        const newOrder = [...currentOrder];\n\n        // Insert at the new position\n        newOrder.splice(insertPosition, 0, taskId);\n        newOrderState[dateKey] = newOrder;\n        return newOrderState;\n      });\n    }\n    try {\n      let updateData;\n      if (targetDate === null) {\n        // Dropping to sidebar - remove due date\n        updateData = {\n          due_string: null\n        };\n      } else {\n        // Dropping to a day - set due date\n        const dateString = toDateKey(targetDate);\n        updateData = {\n          due_string: dateString\n        };\n      }\n      await TodoistService.updateTask(todoistToken, taskId, updateData);\n    } catch (error) {\n      // Revert the optimistic update on error\n      setTodoistTasks(prevTasks => prevTasks.map(task => task.id === taskId ? {\n        ...task,\n        due: task.due\n      } // You might want to store the original value\n      : task));\n      setTodoistError(error);\n      console.error(\"Failed to update task date:\", error);\n    }\n  }, [todoistToken, setTodoistError, setTodoistTasks, setTaskOrder]);\n\n  // Simplified drag handlers using HTML5 drag API\n\n  // Use extracted utility functions for tasks view only\n\n  const handleAddTask = async () => {\n    if (!todoistToken) {\n      setTodoistError(new Error(\"Todoist API token is not set. Please go to settings.\"));\n      return;\n    }\n    if (!newTaskContent.trim()) {\n      setTodoistError(new Error(\"Task content cannot be empty.\"));\n      return;\n    }\n    setLoadingTodoistTasks(true);\n    setTodoistError(null);\n    try {\n      const createdTask = await TodoistService.addTask(todoistToken, {\n        content: newTaskContent,\n        priority: newTaskPriority,\n        due_string: newTaskDueDate // Todoist expects 'due_string' for natural language dates\n      });\n\n      // Format the created task and add it to local state immediately\n      const formattedTask = {\n        id: createdTask.id,\n        title: createdTask.content,\n        content: createdTask.content,\n        completed: createdTask.is_completed || false,\n        priority: createdTask.priority,\n        source: \"todoist\",\n        due: createdTask.due ? createdTask.due.date || createdTask.due.datetime : null\n      };\n      setTodoistTasks(prevTasks => [...prevTasks, formattedTask]);\n      setNewTaskContent(\"\");\n      setNewTaskPriority(1);\n      setNewTaskDueDate(\"\");\n      setShowAddTaskModal(false);\n    } catch (error) {\n      setTodoistError(error);\n      console.error(\"Failed to add Todoist task:\", error);\n    } finally {\n      setLoadingTodoistTasks(false);\n    }\n  };\n  const handleDeleteTask = async taskId => {\n    if (!todoistToken) {\n      setTodoistError(new Error(\"Todoist API token is not set. Please go to settings.\"));\n      return;\n    }\n    if (!window.confirm(\"Are you sure you want to delete this task?\")) {\n      return;\n    }\n    setLoadingTodoistTasks(true);\n    setTodoistError(null);\n    try {\n      await TodoistService.deleteTask(todoistToken, taskId);\n      setTodoistTasks(prevTasks => prevTasks.filter(task => task.id !== taskId));\n    } catch (error) {\n      setTodoistError(error);\n      console.error(\"Failed to delete Todoist task:\", error);\n    } finally {\n      setLoadingTodoistTasks(false);\n    }\n  };\n  const handleEditTask = async (taskId, updates) => {\n    if (!todoistToken) {\n      setTodoistError(new Error(\"Todoist API token is not set. Please go to settings.\"));\n      return;\n    }\n    setLoadingTodoistTasks(true);\n    setTodoistError(null);\n    try {\n      // Ensure due_string is correctly passed if a due date is present\n      const formattedUpdates = {\n        ...updates\n      };\n      if (formattedUpdates.due_string === \"\") {\n        formattedUpdates.due_string = null; // Clear due date if empty string is passed\n      }\n      await TodoistService.updateTask(todoistToken, taskId, formattedUpdates);\n\n      // Update local state immediately instead of refetching\n      setTodoistTasks(prevTasks => prevTasks.map(task => task.id === taskId ? {\n        ...task,\n        content: updates.content || task.content,\n        title: updates.content || task.title,\n        priority: updates.priority || task.priority,\n        due: updates.due_string || task.due\n      } : task));\n      setEditingTask(null); // Clear editing task state\n      setShowEditTaskModal(false); // Close the modal\n    } catch (error) {\n      setTodoistError(error);\n      console.error(\"Failed to edit Todoist task:\", error);\n    } finally {\n      setLoadingTodoistTasks(false);\n    }\n  };\n  const handleTaskCompletionToggle = async (taskId, currentCompletedStatus) => {\n    if (!todoistToken) {\n      setTodoistError(new Error(\"Todoist API token is not set. Please go to settings.\"));\n      return;\n    }\n    setLoadingTodoistTasks(true);\n    setTodoistError(null);\n    try {\n      if (currentCompletedStatus) {\n        // Todoist API doesn't have a direct 'uncomplete' command via sync API for items.\n        // For simplicity, we'll only allow completion for now.\n        // A more robust solution might involve re-adding the task or using a different API.\n        alert(\"Uncompleting tasks is not yet supported for Todoist integration.\");\n      } else {\n        await TodoistService.completeTask(todoistToken, taskId);\n        setTodoistTasks(prevTasks => prevTasks.map(task => task.id === taskId ? {\n          ...task,\n          completed: true\n        } : task));\n      }\n    } catch (error) {\n      setTodoistError(error);\n      console.error(\"Failed to update Todoist task:\", error);\n    } finally {\n      setLoadingTodoistTasks(false);\n    }\n  };\n\n  // Modal components now imported from separate files\n\n  const renderWeeklyPlanner = () => {\n    // weekDates and unscheduledTasks are now defined at the component level\n\n    // Draggable components for different content types\n    const DraggableTask = ({\n      task,\n      isScheduled = false,\n      index = 0\n    }) => /*#__PURE__*/_jsxDEV(Draggable, {\n      draggableId: String(task.id),\n      index: index,\n      children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: provided.innerRef,\n        ...provided.draggableProps,\n        ...provided.dragHandleProps,\n        className: `p-2 rounded-md cursor-move group transition-colors ${isScheduled ? \"bg-red-100 hover:bg-red-200\" : \"bg-gray-100 hover:bg-gray-200\"}`,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center justify-between\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: `text-xs font-medium ${isScheduled ? \"text-red-900\" : \"text-gray-900\"}`,\n              children: task.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 591,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center text-xs mt-1 space-x-1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 596,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 590,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(GripVertical, {\n            className: `w-3 h-3 opacity-0 group-hover:opacity-100 ${isScheduled ? \"text-red-600\" : \"text-gray-400\"}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 599,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 589,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 579,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 577,\n      columnNumber: 7\n    }, this);\n    const DraggableRecipe = ({\n      recipe,\n      isScheduled = false,\n      index = 0\n    }) => /*#__PURE__*/_jsxDEV(Draggable, {\n      draggableId: String(recipe.id),\n      index: index,\n      children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: provided.innerRef,\n        ...provided.draggableProps,\n        ...provided.dragHandleProps,\n        className: `p-2 rounded-md cursor-move group transition-colors ${isScheduled ? \"bg-orange-100 hover:bg-orange-200\" : \"bg-gray-100 hover:bg-gray-200\"}`,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center justify-between\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: `text-xs font-medium ${isScheduled ? \"text-orange-900\" : \"text-gray-900\"}`,\n              children: recipe.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 625,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center text-xs mt-1 space-x-1\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: `px-1 py-0.5 rounded-full ${isScheduled ? \"bg-orange-200 text-orange-700\" : \"bg-gray-200 text-gray-600\"}`,\n                children: recipe.cookTime\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 631,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: `px-1 py-0.5 rounded-full ${isScheduled ? \"bg-orange-200 text-orange-700\" : \"bg-gray-200 text-gray-600\"}`,\n                children: [recipe.calories, \" cal\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 640,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 630,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 624,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(GripVertical, {\n            className: `w-3 h-3 opacity-0 group-hover:opacity-100 ${isScheduled ? \"text-orange-600\" : \"text-gray-400\"}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 651,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 623,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 613,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 611,\n      columnNumber: 7\n    }, this);\n    const DraggableWorkout = ({\n      workout,\n      isScheduled = false,\n      index = 0\n    }) => /*#__PURE__*/_jsxDEV(Draggable, {\n      draggableId: String(workout.id),\n      index: index,\n      children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: provided.innerRef,\n        ...provided.draggableProps,\n        ...provided.dragHandleProps,\n        className: `p-2 rounded-md cursor-move group transition-colors ${isScheduled ? \"bg-green-100 hover:bg-green-200\" : \"bg-gray-100 hover:bg-gray-200\"}`,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center justify-between\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: `text-xs font-medium ${isScheduled ? \"text-green-900\" : \"text-gray-900\"}`,\n              children: workout.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 677,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center text-xs mt-1 space-x-1\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: `px-1 py-0.5 rounded-full ${isScheduled ? \"bg-green-200 text-green-700\" : \"bg-gray-200 text-gray-600\"}`,\n                children: workout.duration\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 683,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: `px-1 py-0.5 rounded-full ${isScheduled ? \"bg-green-200 text-green-700\" : \"bg-gray-200 text-gray-600\"}`,\n                children: workout.difficulty\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 692,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 682,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 676,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(GripVertical, {\n            className: `w-3 h-3 opacity-0 group-hover:opacity-100 ${isScheduled ? \"text-green-600\" : \"text-gray-400\"}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 703,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 675,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 665,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 663,\n      columnNumber: 7\n    }, this);\n\n    // Day column components for different modes\n    const TaskModeDay = ({\n      date,\n      dayName\n    }) => {\n      const dateKey = toDateKey(date);\n      const dayTasks = getTasksForDate(date);\n      const dayEvents = googleCalendarEvents.filter(event => {\n        const eventDate = new Date(event.start);\n        return toDateKey(eventDate) === dateKey;\n      });\n      return /*#__PURE__*/_jsxDEV(Droppable, {\n        droppableId: dateKey,\n        children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: provided.innerRef,\n          ...provided.droppableProps,\n          className: \"bg-gray-50 rounded-lg p-3 min-h-[300px] border-2 border-dashed border-transparent hover:border-blue-300 transition-colors\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"space-y-2\",\n            children: [dayTasks.map((task, index) => /*#__PURE__*/_jsxDEV(DraggableTask, {\n              task: task,\n              isScheduled: true,\n              index: index\n            }, task.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 733,\n              columnNumber: 19\n            }, this)), dayEvents.map(event => /*#__PURE__*/_jsxDEV(Draggable, {\n              draggableId: `event-${event.id}`,\n              index: dayTasks.length + dayEvents.indexOf(event),\n              children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n                ref: provided.innerRef,\n                ...provided.draggableProps,\n                ...provided.dragHandleProps,\n                onClick: () => {\n                  setEditingEvent(event);\n                  setShowEditEventModal(true);\n                },\n                className: \"bg-blue-100 p-2 rounded-md cursor-pointer hover:bg-blue-200 transition-colors group\",\n                title: \"Click to edit \\u2022 Drag to reschedule\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex items-center justify-between\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"flex-1\",\n                    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"text-xs font-medium text-blue-900\",\n                      children: event.title\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 760,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"text-xs text-blue-600\",\n                      children: [new Date(event.start).toLocaleTimeString([], {\n                        hour: \"2-digit\",\n                        minute: \"2-digit\"\n                      }), \" \", \"-\", new Date(event.end).toLocaleTimeString([], {\n                        hour: \"2-digit\",\n                        minute: \"2-digit\"\n                      })]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 763,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 759,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(GripVertical, {\n                    className: \"w-3 h-3 opacity-0 group-hover:opacity-100 text-blue-600\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 775,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 758,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 747,\n                columnNumber: 23\n              }, this)\n            }, event.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 741,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 731,\n            columnNumber: 15\n          }, this), provided.placeholder]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 726,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 724,\n        columnNumber: 9\n      }, this);\n    };\n    const RecipeModeDay = ({\n      date,\n      dayName\n    }) => {\n      const dateKey = toDateKey(date);\n      const dayRecipes = scheduledRecipes[dateKey] || {\n        lunch: [],\n        dinner: []\n      };\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-gray-50 rounded-lg p-2 min-h-[300px] space-y-3\",\n        children: [/*#__PURE__*/_jsxDEV(Droppable, {\n          droppableId: `${dateKey}-lunch`,\n          children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: provided.innerRef,\n            ...provided.droppableProps,\n            className: \"bg-white rounded-md p-2 min-h-[120px] border-2 border-dashed border-orange-200 hover:border-orange-300 transition-colors\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"text-xs font-semibold text-orange-800 mb-2\",\n              children: \"\\uD83C\\uDF7D\\uFE0F Lunch\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 803,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"space-y-1\",\n              children: dayRecipes.lunch.map((recipeId, index) => {\n                const recipe = mockRecipes.find(r => r.id === recipeId);\n                return recipe ? /*#__PURE__*/_jsxDEV(DraggableRecipe, {\n                  recipe: recipe,\n                  isScheduled: true,\n                  index: index\n                }, recipe.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 810,\n                  columnNumber: 23\n                }, this) : null;\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 806,\n              columnNumber: 17\n            }, this), provided.placeholder]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 798,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 796,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Droppable, {\n          droppableId: `${dateKey}-dinner`,\n          children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: provided.innerRef,\n            ...provided.droppableProps,\n            className: \"bg-white rounded-md p-2 min-h-[120px] border-2 border-dashed border-orange-200 hover:border-orange-300 transition-colors\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"text-xs font-semibold text-orange-800 mb-2\",\n              children: \"\\uD83C\\uDF7D\\uFE0F Dinner\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 832,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"space-y-1\",\n              children: dayRecipes.dinner.map((recipeId, index) => {\n                const recipe = mockRecipes.find(r => r.id === recipeId);\n                return recipe ? /*#__PURE__*/_jsxDEV(DraggableRecipe, {\n                  recipe: recipe,\n                  isScheduled: true,\n                  index: index\n                }, recipe.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 839,\n                  columnNumber: 23\n                }, this) : null;\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 835,\n              columnNumber: 17\n            }, this), provided.placeholder]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 827,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 825,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 794,\n        columnNumber: 9\n      }, this);\n    };\n    const WorkoutModeDay = ({\n      date,\n      dayName\n    }) => {\n      const dateKey = toDateKey(date);\n      const dayWorkouts = scheduledWorkouts[dateKey] || [];\n      return /*#__PURE__*/_jsxDEV(Droppable, {\n        droppableId: dateKey,\n        children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: provided.innerRef,\n          ...provided.droppableProps,\n          className: \"bg-gray-50 rounded-lg p-3 min-h-[300px] border-2 border-dashed border-transparent hover:border-green-300 transition-colors\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"space-y-2\",\n            children: dayWorkouts.map((workoutId, index) => {\n              const workout = mockWorkouts.find(w => w.id === workoutId);\n              return workout ? /*#__PURE__*/_jsxDEV(DraggableWorkout, {\n                workout: workout,\n                isScheduled: true,\n                index: index\n              }, workout.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 872,\n                columnNumber: 21\n              }, this) : null;\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 868,\n            columnNumber: 15\n          }, this), provided.placeholder]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 863,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 861,\n        columnNumber: 9\n      }, this);\n    };\n    const renderSidebar = () => {\n      switch (plannerMode) {\n        case \"recipes\":\n          return /*#__PURE__*/_jsxDEV(Droppable, {\n            droppableId: \"unscheduled-recipes\",\n            children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n              ref: provided.innerRef,\n              ...provided.droppableProps,\n              className: \"w-80 bg-white rounded-xl p-4 shadow-sm border\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"font-semibold text-gray-900 mb-4\",\n                children: [\"Available Recipes (\", mockRecipes.length, \")\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 899,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"space-y-2 max-h-96 overflow-y-auto\",\n                children: mockRecipes.map((recipe, index) => /*#__PURE__*/_jsxDEV(DraggableRecipe, {\n                  recipe: recipe,\n                  index: index\n                }, recipe.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 904,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 902,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mt-4 pt-4 border-t\",\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-xs text-gray-500\",\n                  children: \"Drag recipes to schedule lunch or dinner\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 912,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 911,\n                columnNumber: 19\n              }, this), provided.placeholder]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 894,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 892,\n            columnNumber: 13\n          }, this);\n        case \"workouts\":\n          return /*#__PURE__*/_jsxDEV(Droppable, {\n            droppableId: \"unscheduled-workouts\",\n            children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n              ref: provided.innerRef,\n              ...provided.droppableProps,\n              className: \"w-80 bg-white rounded-xl p-4 shadow-sm border\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"font-semibold text-gray-900 mb-4\",\n                children: [\"Available Workouts (\", mockWorkouts.length, \")\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 931,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"space-y-2 max-h-96 overflow-y-auto\",\n                children: mockWorkouts.map((workout, index) => /*#__PURE__*/_jsxDEV(DraggableWorkout, {\n                  workout: workout,\n                  index: index\n                }, workout.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 936,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 934,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mt-4 pt-4 border-t\",\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-xs text-gray-500\",\n                  children: \"Drag workouts to schedule them on specific days\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 944,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 943,\n                columnNumber: 19\n              }, this), provided.placeholder]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 926,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 924,\n            columnNumber: 13\n          }, this);\n        case \"all\":\n          return /*#__PURE__*/_jsxDEV(Droppable, {\n            droppableId: \"unscheduled-all\",\n            children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n              ref: provided.innerRef,\n              ...provided.droppableProps,\n              className: \"w-80 bg-white rounded-xl p-4 shadow-sm border\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"font-semibold text-gray-900 mb-4\",\n                children: \"All Unscheduled Items\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 963,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"space-y-2 max-h-96 overflow-y-auto\",\n                children: [unscheduledTasks.map((task, index) => /*#__PURE__*/_jsxDEV(DraggableTask, {\n                  task: task,\n                  index: index\n                }, task.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 968,\n                  columnNumber: 23\n                }, this)), mockRecipes.map((recipe, index) => /*#__PURE__*/_jsxDEV(DraggableRecipe, {\n                  recipe: recipe,\n                  index: index\n                }, recipe.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 971,\n                  columnNumber: 23\n                }, this)), mockWorkouts.map((workout, index) => /*#__PURE__*/_jsxDEV(DraggableWorkout, {\n                  workout: workout,\n                  index: index\n                }, workout.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 978,\n                  columnNumber: 23\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 966,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mt-4 pt-4 border-t\",\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-xs text-gray-500\",\n                  children: \"Drag items to schedule them on specific days\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 986,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 985,\n                columnNumber: 19\n              }, this), provided.placeholder]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 958,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 956,\n            columnNumber: 13\n          }, this);\n        default:\n          // tasks mode\n          const startOfCurrentWeek = new Date(currentWeekStart); // currentWeekStart is already the start of the current week\n          const overdueTasks = tasks.filter(task => {\n            if (!task.due) return false;\n            const dueDate = new Date(task.due);\n            // An overdue task from the previous week is one that was due before the start of the current week\n            return dueDate < startOfCurrentWeek && !task.completed;\n          });\n          const filteredUnscheduledTasks = filterTasksByString(tasks, taskFilter);\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-80 bg-white rounded-xl p-4 shadow-sm border\",\n            children: [overdueTasks.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bg-red-50 border border-red-200 rounded-lg p-3 mb-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"font-semibold text-red-800 mb-2\",\n                children: [\"Overdue Tasks (\", overdueTasks.length, \")\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1018,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"space-y-2 max-h-40 overflow-y-auto\",\n                children: overdueTasks.map((task, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"bg-red-100 p-2 rounded-md\",\n                  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"text-xs font-medium text-red-900\",\n                    children: task.content\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1024,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"text-xs text-red-600\",\n                    children: [\"Due: \", new Date(task.due).toLocaleDateString()]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1027,\n                    columnNumber: 25\n                  }, this)]\n                }, task.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1023,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1021,\n                columnNumber: 19\n              }, this)]\n            }, \"overdue-tasks-box\", true, {\n              fileName: _jsxFileName,\n              lineNumber: 1014,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"font-semibold text-gray-900 mb-2\",\n                children: \"Task Filters\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1038,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex flex-wrap gap-2\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => setTaskFilter(\"all\"),\n                  className: `px-3 py-1 rounded-full text-xs font-medium ${taskFilter === \"all\" ? \"bg-blue-600 text-white\" : \"bg-gray-100 text-gray-600 hover:bg-gray-200\"}`,\n                  children: [\"All (\", tasks.filter(t => !t.completed).length, \")\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1045,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => setTaskFilter(\"bridge_club\"),\n                  className: `px-3 py-1 rounded-full text-xs font-medium ${taskFilter === \"bridge_club\" ? \"bg-blue-600 text-white\" : \"bg-gray-100 text-gray-600 hover:bg-gray-200\"}`,\n                  children: [\"Bridge Club (\", tasks.filter(t => t.project_name && t.project_name.toLowerCase().includes(\"bridge club\") && !t.completed).length, \")\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1055,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => setTaskFilter(\"home\"),\n                  className: `px-3 py-1 rounded-full text-xs font-medium ${taskFilter === \"home\" ? \"bg-blue-600 text-white\" : \"bg-gray-100 text-gray-600 hover:bg-gray-200\"}`,\n                  children: [\"Home (\", tasks.filter(t => t.project_name && t.project_name.toLowerCase() === \"home\" && !t.completed).length, \")\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1076,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => setTaskFilter(\"urgent\"),\n                  className: `px-3 py-1 rounded-full text-xs font-medium ${taskFilter === \"urgent\" ? \"bg-blue-600 text-white\" : \"bg-gray-100 text-gray-600 hover:bg-gray-200\"}`,\n                  children: [\"Urgent (\", tasks.filter(t => t.priority === 4 && !t.completed).length, \")\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1095,\n                  columnNumber: 19\n                }, this)]\n              }, \"task-filters-buttons\", true, {\n                fileName: _jsxFileName,\n                lineNumber: 1041,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1037,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Droppable, {\n              droppableId: \"unscheduled\",\n              children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n                ref: provided.innerRef,\n                ...provided.droppableProps,\n                className: \"space-y-2 max-h-96 overflow-y-auto\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  className: \"font-semibold text-gray-900 mb-4\",\n                  children: [\"Unscheduled Tasks (\", filteredUnscheduledTasks.length, \")\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1120,\n                  columnNumber: 21\n                }, this), filteredUnscheduledTasks.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-gray-500 text-sm\",\n                  children: \"No unscheduled tasks\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1124,\n                  columnNumber: 23\n                }, this) : filteredUnscheduledTasks.map((task, index) => /*#__PURE__*/_jsxDEV(DraggableTask, {\n                  task: task,\n                  index: index\n                }, task.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1129,\n                  columnNumber: 25\n                }, this)), provided.placeholder]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1115,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1113,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mt-4 pt-4 border-t\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-xs text-gray-500\",\n                children: \"Drag tasks to schedule them on specific days\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1141,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1140,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1011,\n            columnNumber: 13\n          }, this);\n      }\n    };\n    const AllModeDay = ({\n      date,\n      dayName\n    }) => {\n      const dateKey = toDateKey(date);\n      const dayTasks = getTasksForDate(date);\n      const dayRecipes = scheduledRecipes[dateKey] || {\n        lunch: [],\n        dinner: []\n      };\n      const dayWorkouts = scheduledWorkouts[dateKey] || [];\n      const dayEvents = googleCalendarEvents.filter(event => {\n        const eventDate = new Date(event.start);\n        return toDateKey(eventDate) === dateKey;\n      });\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-gray-50 rounded-lg p-2 min-h-[300px] space-y-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-blue-50 rounded-md p-2 min-h-[80px] border-2 border-dashed border-blue-200\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"text-xs font-semibold text-blue-800 mb-2\",\n            children: \"\\uD83D\\uDDD3\\uFE0F Events\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1164,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"space-y-1\",\n            children: dayEvents.map(event => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bg-blue-100 p-2 rounded-md\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-xs font-medium text-blue-900\",\n                children: event.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1170,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-xs text-blue-600\",\n                children: [new Date(event.start).toLocaleTimeString([], {\n                  hour: \"2-digit\",\n                  minute: \"2-digit\"\n                }), \" \", \"-\", new Date(event.end).toLocaleTimeString([], {\n                  hour: \"2-digit\",\n                  minute: \"2-digit\"\n                })]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1173,\n                columnNumber: 19\n              }, this)]\n            }, event.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1169,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1167,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1163,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Droppable, {\n          droppableId: `${dateKey}-tasks`,\n          children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: provided.innerRef,\n            ...provided.droppableProps,\n            className: \"bg-white rounded-md p-2 min-h-[80px] border-2 border-dashed border-blue-200 hover:border-blue-300 transition-colors\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"text-xs font-semibold text-blue-800 mb-2\",\n              children: \"\\u2705 Tasks\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1197,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"space-y-1\",\n              children: dayTasks.map((task, index) => /*#__PURE__*/_jsxDEV(DraggableTask, {\n                task: task,\n                isScheduled: true,\n                index: index\n              }, task.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1202,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1200,\n              columnNumber: 17\n            }, this), provided.placeholder]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1192,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1190,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Droppable, {\n          droppableId: `${dateKey}-lunch`,\n          children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: provided.innerRef,\n            ...provided.droppableProps,\n            className: \"bg-white rounded-md p-2 min-h-[80px] border-2 border-dashed border-orange-200 hover:border-orange-300 transition-colors\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"text-xs font-semibold text-orange-800 mb-2\",\n              children: \"\\uD83C\\uDF7D\\uFE0F Lunch\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1223,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"space-y-1\",\n              children: dayRecipes.lunch.map((recipeId, index) => {\n                const recipe = mockRecipes.find(r => r.id === recipeId);\n                return recipe ? /*#__PURE__*/_jsxDEV(DraggableRecipe, {\n                  recipe: recipe,\n                  isScheduled: true,\n                  index: index\n                }, recipe.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1230,\n                  columnNumber: 23\n                }, this) : null;\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1226,\n              columnNumber: 17\n            }, this), provided.placeholder]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1218,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1216,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Droppable, {\n          droppableId: `${dateKey}-dinner`,\n          children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: provided.innerRef,\n            ...provided.droppableProps,\n            className: \"bg-white rounded-md p-2 min-h-[80px] border-2 border-dashed border-orange-200 hover:border-orange-300 transition-colors\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"text-xs font-semibold text-orange-800 mb-2\",\n              children: \"\\uD83C\\uDF7D\\uFE0F Dinner\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1252,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"space-y-1\",\n              children: dayRecipes.dinner.map((recipeId, index) => {\n                const recipe = mockRecipes.find(r => r.id === recipeId);\n                return recipe ? /*#__PURE__*/_jsxDEV(DraggableRecipe, {\n                  recipe: recipe,\n                  isScheduled: true,\n                  index: index\n                }, recipe.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1259,\n                  columnNumber: 23\n                }, this) : null;\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1255,\n              columnNumber: 17\n            }, this), provided.placeholder]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1247,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1245,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Droppable, {\n          droppableId: `${dateKey}-workouts`,\n          children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: provided.innerRef,\n            ...provided.droppableProps,\n            className: \"bg-white rounded-md p-2 min-h-[80px] border-2 border-dashed border-green-200 hover:border-green-300 transition-colors\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"text-xs font-semibold text-green-800 mb-2\",\n              children: \"\\uD83D\\uDCAA Workouts\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1281,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"space-y-1\",\n              children: dayWorkouts.map((workoutId, index) => {\n                const workout = mockWorkouts.find(w => w.id === workoutId);\n                return workout ? /*#__PURE__*/_jsxDEV(DraggableWorkout, {\n                  workout: workout,\n                  isScheduled: true,\n                  index: index\n                }, workout.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1290,\n                  columnNumber: 23\n                }, this) : null;\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1284,\n              columnNumber: 17\n            }, this), provided.placeholder]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1276,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1274,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1161,\n        columnNumber: 9\n      }, this);\n    };\n    const renderDayColumns = () => {\n      switch (plannerMode) {\n        case \"recipes\":\n          return weekDates.map(date => {\n            const dateKey = toDateKey(date);\n            return /*#__PURE__*/_jsxDEV(RecipeModeDay, {\n              date: date,\n              dayName: date.toLocaleDateString(\"en-US\", {\n                weekday: \"short\"\n              })\n            }, dateKey, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1313,\n              columnNumber: 15\n            }, this);\n          });\n        case \"workouts\":\n          return weekDates.map(date => {\n            const dateKey = toDateKey(date);\n            return /*#__PURE__*/_jsxDEV(WorkoutModeDay, {\n              date: date,\n              dayName: date.toLocaleDateString(\"en-US\", {\n                weekday: \"short\"\n              })\n            }, dateKey, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1324,\n              columnNumber: 15\n            }, this);\n          });\n        case \"all\":\n          return weekDates.map(date => {\n            const dateKey = toDateKey(date);\n            return /*#__PURE__*/_jsxDEV(AllModeDay, {\n              date: date,\n              dayName: date.toLocaleDateString(\"en-US\", {\n                weekday: \"short\"\n              })\n            }, dateKey, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1335,\n              columnNumber: 15\n            }, this);\n          });\n        default:\n          return weekDates.map(date => {\n            const dateKey = toDateKey(date);\n            return /*#__PURE__*/_jsxDEV(TaskModeDay, {\n              date: date,\n              dayName: date.toLocaleDateString(\"en-US\", {\n                weekday: \"short\"\n              })\n            }, dateKey, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1346,\n              columnNumber: 15\n            }, this);\n          });\n      }\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white rounded-xl p-4 shadow-sm border mb-6 space-y-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center justify-between\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => navigateWeek(-1),\n            className: \"flex items-center px-3 py-2 text-gray-600 hover:text-gray-900 hover:bg-gray-100 rounded-lg transition-colors\",\n            children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n              className: \"w-4 h-4 mr-2\",\n              fill: \"none\",\n              stroke: \"currentColor\",\n              viewBox: \"0 0 24 24\",\n              children: /*#__PURE__*/_jsxDEV(\"path\", {\n                strokeLinecap: \"round\",\n                strokeLinejoin: \"round\",\n                strokeWidth: \"2\",\n                d: \"M15 19l-7-7 7-7\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1372,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1366,\n              columnNumber: 15\n            }, this), \"Previous Week\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1362,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"text-xl font-semibold text-gray-900\",\n              children: formatWeekRange(currentWeekStart)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1383,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-sm text-gray-500\",\n              children: new Date().getFullYear()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1386,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1382,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => navigateWeek(1),\n            className: \"flex items-center px-3 py-2 text-gray-600 hover:text-gray-900 hover:bg-gray-100 rounded-lg transition-colors\",\n            children: [\"Next Week\", /*#__PURE__*/_jsxDEV(\"svg\", {\n              className: \"w-4 h-4 ml-2\",\n              fill: \"none\",\n              stroke: \"currentColor\",\n              viewBox: \"0 0 24 24\",\n              children: /*#__PURE__*/_jsxDEV(\"path\", {\n                strokeLinecap: \"round\",\n                strokeLinejoin: \"round\",\n                strokeWidth: \"2\",\n                d: \"M9 5l7 7-7 7\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1402,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1396,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1391,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1361,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center justify-center\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-gray-100 p-1 rounded-lg flex space-x-1\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setPlannerMode(\"tasks\"),\n              className: `px-4 py-2 rounded-md text-sm font-medium transition-colors ${plannerMode === \"tasks\" ? \"bg-white text-blue-600 shadow-sm\" : \"text-gray-600 hover:text-gray-900\"}`,\n              children: [/*#__PURE__*/_jsxDEV(CheckSquare, {\n                className: \"w-4 h-4 inline mr-2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1423,\n                columnNumber: 17\n              }, this), \"Tasks\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1415,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setPlannerMode(\"recipes\"),\n              className: `px-4 py-2 rounded-md text-sm font-medium transition-colors ${plannerMode === \"recipes\" ? \"bg-white text-orange-600 shadow-sm\" : \"text-gray-600 hover:text-gray-900\"}`,\n              children: [/*#__PURE__*/_jsxDEV(Utensils, {\n                className: \"w-4 h-4 inline mr-2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1434,\n                columnNumber: 17\n              }, this), \"Recipes\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1426,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setPlannerMode(\"workouts\"),\n              className: `px-4 py-2 rounded-md text-sm font-medium transition-colors ${plannerMode === \"workouts\" ? \"bg-white text-green-600 shadow-sm\" : \"text-gray-600 hover:text-gray-900\"}`,\n              children: [/*#__PURE__*/_jsxDEV(Dumbbell, {\n                className: \"w-4 h-4 inline mr-2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1445,\n                columnNumber: 17\n              }, this), \"Workouts\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1437,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setPlannerMode(\"all\"),\n              className: `px-4 py-2 rounded-md text-sm font-medium transition-colors ${plannerMode === \"all\" ? \"bg-white text-gray-800 shadow-sm\" : \"text-gray-600 hover:text-gray-900\"}`,\n              children: \"All\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1448,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1414,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1413,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1359,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex gap-6\",\n        children: [renderSidebar(), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-1\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid grid-cols-7 gap-4 mb-4\",\n            children: weekDates.map((date, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"font-semibold text-gray-900\",\n                children: date.toLocaleDateString(\"en-US\", {\n                  weekday: \"short\"\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1472,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-sm text-gray-600\",\n                children: date.toLocaleDateString(\"en-US\", {\n                  month: \"short\",\n                  day: \"numeric\"\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1475,\n                columnNumber: 19\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1471,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1469,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid grid-cols-7 gap-4\",\n            children: renderDayColumns()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1486,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1467,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1462,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-6 flex items-center justify-center space-x-6 text-sm\",\n        children: [plannerMode === \"tasks\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"w-3 h-3 bg-red-100 rounded mr-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1495,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Todoist Tasks\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1496,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1494,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"w-3 h-3 bg-blue-100 rounded mr-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1499,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Events\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1500,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1498,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true), plannerMode === \"recipes\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"w-3 h-3 bg-orange-100 rounded mr-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1507,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Recipes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1508,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1506,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"w-3 h-3 bg-orange-200 rounded mr-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1511,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Lunch\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1512,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1510,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"w-3 h-3 bg-orange-300 rounded mr-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1515,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Dinner\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1516,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1514,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true), plannerMode === \"workouts\" && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-3 h-3 bg-green-100 rounded mr-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1522,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Workouts\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1523,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1521,\n          columnNumber: 13\n        }, this), plannerMode === \"all\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"w-3 h-3 bg-red-100 rounded mr-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1529,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Todoist Tasks\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1530,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1528,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"w-3 h-3 bg-blue-100 rounded mr-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1533,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Events\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1534,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1532,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"w-3 h-3 bg-orange-100 rounded mr-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1537,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Recipes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1538,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1536,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"w-3 h-3 bg-green-100 rounded mr-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1541,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Workouts\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1542,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1540,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1491,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1357,\n      columnNumber: 7\n    }, this);\n  };\n  const renderContent = () => {\n    switch (activeView) {\n      case \"dashboard\":\n        return /*#__PURE__*/_jsxDEV(Dashboard, {\n          selectedDate: selectedDate,\n          setSelectedDate: setSelectedDate,\n          showDatePicker: showDatePicker,\n          setShowDatePicker: setShowDatePicker,\n          tasks: tasks,\n          getTasksForDate: getTasksForDate,\n          scratchpadContent: scratchpadContent,\n          setScratchpadContent: content => {\n            setScratchpadContent(content);\n            const dateKey = selectedDate.toLocaleDateString('en-CA');\n            localStorage.setItem(`scratchpad-${dateKey}`, content);\n          },\n          handleTaskCompletionToggle: handleTaskCompletionToggle,\n          scheduledRecipes: scheduledRecipes,\n          scheduledWorkouts: scheduledWorkouts,\n          dayTaskFilter: dayTaskFilter,\n          setDayTaskFilter: setDayTaskFilter,\n          setShowAddTaskModal: setShowAddTaskModal,\n          setEditingTask: setEditingTask,\n          setShowEditTaskModal: setShowEditTaskModal,\n          editingTask: editingTask,\n          showEditTaskModal: showEditTaskModal\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1557,\n          columnNumber: 11\n        }, this);\n      case \"planner\":\n        return renderWeeklyPlanner();\n      case \"tasks\":\n        return /*#__PURE__*/_jsxDEV(TasksView, {\n          tasks: tasks,\n          todoistToken: todoistToken,\n          loadingTodoistTasks: loadingTodoistTasks,\n          todoistError: todoistError,\n          fetchTodoistTasks: fetchTodoistTasks,\n          setShowAddTaskModal: setShowAddTaskModal,\n          showAddTaskModal: showAddTaskModal,\n          newTaskContent: newTaskContent,\n          setNewTaskContent: setNewTaskContent,\n          newTaskPriority: newTaskPriority,\n          setNewTaskPriority: setNewTaskPriority,\n          newTaskDueDate: newTaskDueDate,\n          setNewTaskDueDate: setNewTaskDueDate,\n          newTaskDueDateMode: newTaskDueDateMode,\n          setNewTaskDueDateMode: setNewTaskDueDateMode,\n          handleAddTask: handleAddTask,\n          handleDeleteTask: handleDeleteTask,\n          handleTaskCompletionToggle: handleTaskCompletionToggle,\n          setEditingTask: setEditingTask,\n          setShowEditTaskModal: setShowEditTaskModal,\n          activeFilters: activeFilters,\n          setActiveFilters: setActiveFilters,\n          sortBy: sortBy,\n          setSortBy: setSortBy,\n          groupBy: groupBy,\n          setGroupBy: setGroupBy,\n          selectedProjects: selectedProjects,\n          setSelectedProjects: setSelectedProjects,\n          availableProjects: availableProjects\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1586,\n          columnNumber: 11\n        }, this);\n      case \"settings\":\n        return /*#__PURE__*/_jsxDEV(Settings, {\n          todoistToken: todoistToken,\n          setTodoistToken: setTodoistToken,\n          handleSaveTodoistToken: handleSaveTodoistToken,\n          todoistError: todoistError,\n          googleCalendarToken: googleCalendarToken,\n          setGoogleCalendarToken: setGoogleCalendarToken,\n          handleGoogleAuthClick: handleGoogleAuthClick,\n          googleCalendarError: googleCalendarError,\n          loadingGoogleCalendarEvents: loadingGoogleCalendarEvents,\n          claudeApiKey: claudeApiKey,\n          setClaudeApiKey: setClaudeApiKey,\n          handleSaveClaudeApiKey: handleSaveClaudeApiKey,\n          claudeApiError: claudeApiError,\n          loadingTodoistTasks: loadingTodoistTasks\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1620,\n          columnNumber: 11\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-6 flex items-center justify-center h-full\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"w-16 h-16 bg-gray-200 rounded-full flex items-center justify-center mx-auto mb-4\",\n              children: /*#__PURE__*/_jsxDEV(Calendar, {\n                className: \"w-8 h-8 text-gray-500\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1642,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1641,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"text-lg font-semibold text-gray-900 mb-2\",\n              children: \"Coming Soon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1644,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-gray-600\",\n              children: \"This feature is under development.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1647,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1640,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1639,\n          columnNumber: 11\n        }, this);\n    }\n  };\n  const onDragEnd = React.useCallback(result => {\n    const {\n      destination,\n      draggableId,\n      source\n    } = result;\n    if (!destination) {\n      return;\n    }\n\n    // If dropped in the same position, do nothing\n    if (destination.droppableId === source.droppableId && destination.index === source.index) {\n      return;\n    }\n\n    // Handle different modes\n    if (plannerMode === \"recipes\") {\n      if (destination.droppableId === \"unscheduled-recipes\") {\n        // Dragged back to sidebar - remove from schedule\n        if (DEBUG) console.log(\"Removing recipe from schedule:\", draggableId);\n        setScheduledRecipes(prev => {\n          const newScheduled = {\n            ...prev\n          };\n          Object.keys(newScheduled).forEach(dateKey => {\n            if (newScheduled[dateKey] && typeof newScheduled[dateKey] === \"object\") {\n              Object.keys(newScheduled[dateKey]).forEach(mealType => {\n                if (Array.isArray(newScheduled[dateKey][mealType])) {\n                  newScheduled[dateKey][mealType] = newScheduled[dateKey][mealType].filter(id => id !== draggableId);\n                }\n              });\n            }\n          });\n          if (DEBUG) console.log(\"After removal, scheduled recipes:\", newScheduled);\n          return newScheduled;\n        });\n        return;\n      }\n\n      // Handle recipe scheduling - expect format like \"2025-01-01-lunch\"\n      const parts = destination.droppableId.split(\"-\");\n      if (parts.length >= 4) {\n        const dateKey = `${parts[0]}-${parts[1]}-${parts[2]}`;\n        const mealType = parts[3];\n        if (DEBUG) console.log(\"Scheduling recipe:\", draggableId, \"to\", dateKey, mealType);\n        setScheduledRecipes(prev => {\n          const newScheduled = {\n            ...prev\n          };\n\n          // Remove from any existing dates/meals first\n          Object.keys(newScheduled).forEach(existingDateKey => {\n            if (newScheduled[existingDateKey] && typeof newScheduled[existingDateKey] === \"object\") {\n              Object.keys(newScheduled[existingDateKey]).forEach(existingMealType => {\n                if (Array.isArray(newScheduled[existingDateKey][existingMealType])) {\n                  newScheduled[existingDateKey][existingMealType] = newScheduled[existingDateKey][existingMealType].filter(id => id !== draggableId);\n                }\n              });\n            }\n          });\n\n          // Add to new date/meal at the specific index\n          if (!newScheduled[dateKey]) {\n            newScheduled[dateKey] = {\n              lunch: [],\n              dinner: []\n            };\n          }\n          if (!newScheduled[dateKey][mealType]) {\n            newScheduled[dateKey][mealType] = [];\n          }\n\n          // Insert at the specific index instead of just pushing\n          const targetArray = [...newScheduled[dateKey][mealType]];\n          targetArray.splice(destination.index, 0, draggableId);\n          newScheduled[dateKey][mealType] = targetArray;\n          if (DEBUG) console.log(\"Updated scheduled recipes:\", newScheduled);\n          return newScheduled;\n        });\n        return;\n      } else {\n        console.error(\"Invalid droppable ID format for recipes:\", destination.droppableId);\n        return;\n      }\n    }\n    if (plannerMode === \"workouts\") {\n      if (destination.droppableId === \"unscheduled-workouts\") {\n        // Dragged back to sidebar - remove from schedule\n        setScheduledWorkouts(prev => {\n          const newScheduled = {\n            ...prev\n          };\n          Object.keys(newScheduled).forEach(dateKey => {\n            newScheduled[dateKey] = newScheduled[dateKey].filter(id => id !== draggableId);\n          });\n          return newScheduled;\n        });\n        return;\n      }\n\n      // Handle workout scheduling - droppableId should be the date key\n      let dateKey = destination.droppableId;\n\n      // Handle the case where the droppableId includes \"-workouts\" suffix\n      if (dateKey.endsWith(\"-workouts\")) {\n        const parts = dateKey.split(\"-\");\n        if (parts.length >= 4) {\n          dateKey = `${parts[0]}-${parts[1]}-${parts[2]}`;\n        }\n      }\n      setScheduledWorkouts(prev => {\n        const newScheduled = {\n          ...prev\n        };\n\n        // Remove from any existing dates first\n        Object.keys(newScheduled).forEach(existingDateKey => {\n          newScheduled[existingDateKey] = newScheduled[existingDateKey].filter(id => id !== draggableId);\n        });\n\n        // Add to new date at the specific index\n        if (!newScheduled[dateKey]) {\n          newScheduled[dateKey] = [];\n        }\n        const targetArray = [...newScheduled[dateKey]];\n        targetArray.splice(destination.index, 0, draggableId);\n        newScheduled[dateKey] = targetArray;\n        return newScheduled;\n      });\n      return;\n    }\n    if (plannerMode === \"all\") {\n      // Handle different droppable types in \"all\" mode\n      if (destination.droppableId === \"unscheduled-all\") {\n        // Dragged back to sidebar - remove from all schedules\n        const isRecipe = mockRecipes.some(r => r.id === draggableId);\n        const isWorkout = mockWorkouts.some(w => w.id === draggableId);\n        if (isRecipe) {\n          setScheduledRecipes(prev => {\n            const newScheduled = {\n              ...prev\n            };\n            Object.keys(newScheduled).forEach(dateKey => {\n              if (newScheduled[dateKey] && typeof newScheduled[dateKey] === \"object\") {\n                Object.keys(newScheduled[dateKey]).forEach(mealType => {\n                  if (Array.isArray(newScheduled[dateKey][mealType])) {\n                    newScheduled[dateKey][mealType] = newScheduled[dateKey][mealType].filter(id => id !== draggableId);\n                  }\n                });\n              }\n            });\n            return newScheduled;\n          });\n        } else if (isWorkout) {\n          setScheduledWorkouts(prev => {\n            const newScheduled = {\n              ...prev\n            };\n            Object.keys(newScheduled).forEach(dateKey => {\n              newScheduled[dateKey] = newScheduled[dateKey].filter(id => id !== draggableId);\n            });\n            return newScheduled;\n          });\n        } else {\n          // It's a task\n          handleTaskDrop(draggableId, null, destination.index);\n        }\n        return;\n      }\n\n      // Handle drops to specific day containers with meal types or workouts\n      const parts = destination.droppableId.split(\"-\");\n      if (parts.length >= 4 && (parts[3] === \"lunch\" || parts[3] === \"dinner\")) {\n        // Recipe drop with meal type (e.g., \"2025-01-01-lunch\")\n        const dateKey = `${parts[0]}-${parts[1]}-${parts[2]}`;\n        const mealType = parts[3];\n        setScheduledRecipes(prev => {\n          const newScheduled = {\n            ...prev\n          };\n          // Remove from existing locations\n          Object.keys(newScheduled).forEach(existingDateKey => {\n            if (newScheduled[existingDateKey] && typeof newScheduled[existingDateKey] === \"object\") {\n              Object.keys(newScheduled[existingDateKey]).forEach(existingMealType => {\n                if (Array.isArray(newScheduled[existingDateKey][existingMealType])) {\n                  newScheduled[existingDateKey][existingMealType] = newScheduled[existingDateKey][existingMealType].filter(id => id !== draggableId);\n                }\n              });\n            }\n          });\n          // Add to new location at specific index\n          if (!newScheduled[dateKey]) {\n            newScheduled[dateKey] = {\n              lunch: [],\n              dinner: []\n            };\n          }\n          if (!newScheduled[dateKey][mealType]) {\n            newScheduled[dateKey][mealType] = [];\n          }\n          const targetArray = [...newScheduled[dateKey][mealType]];\n          targetArray.splice(destination.index, 0, draggableId);\n          newScheduled[dateKey][mealType] = targetArray;\n          return newScheduled;\n        });\n      } else if (parts.length >= 4 && parts[3] === \"workouts\") {\n        // Workout drop (e.g., \"2025-01-01-workouts\")\n        const dateKey = `${parts[0]}-${parts[1]}-${parts[2]}`;\n        setScheduledWorkouts(prev => {\n          const newScheduled = {\n            ...prev\n          };\n          // Remove from existing locations\n          Object.keys(newScheduled).forEach(existingDateKey => {\n            newScheduled[existingDateKey] = newScheduled[existingDateKey].filter(id => id !== draggableId);\n          });\n          // Add to new location at specific index\n          if (!newScheduled[dateKey]) {\n            newScheduled[dateKey] = [];\n          }\n          const targetArray = [...newScheduled[dateKey]];\n          targetArray.splice(destination.index, 0, draggableId);\n          newScheduled[dateKey] = targetArray;\n          return newScheduled;\n        });\n      } else {\n        try {\n          // Task drop to a date\n          const destDate = parseDateKey(destination.droppableId);\n          if (isNaN(destDate.getTime())) {\n            console.error(\"Invalid date for task scheduling:\", destination.droppableId);\n            return;\n          }\n          handleTaskDrop(draggableId, destDate, destination.index);\n        } catch (error) {\n          console.error(\"Error handling task drop:\", error);\n        }\n        return;\n      }\n    }\n\n    // Default task mode handling (if not in 'all' mode)\n    if (destination.droppableId === \"unscheduled\") {\n      handleTaskDrop(draggableId, null, destination.index);\n      return;\n    }\n    try {\n      const destDate = parseDateKey(destination.droppableId);\n      if (isNaN(destDate.getTime())) {\n        console.error(\"Invalid date for task scheduling:\", destination.droppableId);\n        return;\n      }\n      handleTaskDrop(draggableId, destDate, destination.index);\n    } catch (error) {\n      console.error(\"Error handling task drop:\", error);\n    }\n  }, [plannerMode, setScheduledRecipes, setScheduledWorkouts, handleTaskDrop]);\n\n  // Prepare app state and actions for Claude integration\n  const appState = {\n    activeView,\n    selectedDate,\n    tasks,\n    scheduledRecipes,\n    scheduledWorkouts,\n    scratchpadContent,\n    dayTaskFilter,\n    activeFilters,\n    taskFilter,\n    todoistToken,\n    googleCalendarToken,\n    availableProjects,\n    currentWeekStart\n  };\n  const appActions = {\n    setActiveView,\n    setSelectedDate,\n    setScratchpadContent,\n    setDayTaskFilter,\n    setActiveFilters,\n    setTaskFilter,\n    setScheduledRecipes,\n    setScheduledWorkouts,\n    handleAddTask,\n    handleEditTask,\n    handleDeleteTask,\n    handleTaskCompletionToggle,\n    fetchTodoistTasks,\n    navigateWeek: navigateWeek\n  };\n  return /*#__PURE__*/_jsxDEV(DragDropContext, {\n    onDragEnd: onDragEnd,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex h-screen bg-gray-50\",\n      children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n        activeView: activeView,\n        setActiveView: setActiveView,\n        isCollapsed: isSidebarCollapsed,\n        setIsCollapsed: setIsSidebarCollapsed,\n        toggleClaudeSidebar: () => setIsClaudeSidebarOpen(!isClaudeSidebarOpen)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2014,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ClaudeProvider, {\n        appState: appState,\n        appActions: appActions,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-1 flex overflow-hidden\",\n          style: {\n            marginRight: isClaudeSidebarOpen ? `${claudeSidebarWidth}px` : '0px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"main\", {\n            className: \"flex-1 overflow-y-auto\",\n            children: renderContent()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2025,\n            columnNumber: 13\n          }, this), isClaudeSidebarOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"fixed right-0 top-0 h-full bg-white shadow-lg flex-shrink-0\",\n            style: {\n              width: `${claudeSidebarWidth}px`\n            },\n            children: [/*#__PURE__*/_jsxDEV(ClaudeAssistant, {\n              toggleSidebar: () => setIsClaudeSidebarOpen(false)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2035,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"absolute left-0 top-0 h-full w-2 cursor-ew-resize\",\n              onMouseDown: e => {\n                e.preventDefault();\n                const startX = e.clientX;\n                const startWidth = claudeSidebarWidth;\n                const doMouseMove = mouseMoveEvent => {\n                  const newWidth = startWidth - (mouseMoveEvent.clientX - startX);\n                  setClaudeSidebarWidth(Math.max(250, Math.min(800, newWidth))); // Min 250px, Max 800px\n                };\n                const doMouseUp = () => {\n                  document.removeEventListener('mousemove', doMouseMove);\n                  document.removeEventListener('mouseup', doMouseUp);\n                };\n                document.addEventListener('mousemove', doMouseMove);\n                document.addEventListener('mouseup', doMouseUp);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2037,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2031,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2024,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2023,\n        columnNumber: 9\n      }, this), showEditTaskModal && editingTask && /*#__PURE__*/_jsxDEV(EditTaskModal, {\n        task: editingTask,\n        onSave: handleEditTask,\n        onClose: () => {\n          setShowEditTaskModal(false);\n          setEditingTask(null);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2065,\n        columnNumber: 11\n      }, this), showEditEventModal && editingEvent && /*#__PURE__*/_jsxDEV(EditEventModal, {\n        event: editingEvent,\n        onSave: (eventId, updates) => {\n          // Handle event updates here\n          console.log(\"Event update:\", eventId, updates);\n          setShowEditEventModal(false);\n          setEditingEvent(null);\n        },\n        onClose: () => {\n          setShowEditEventModal(false);\n          setEditingEvent(null);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2076,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 2012,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 2011,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"H2b4z994HKsuTWv36piFj3hoEkg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","DragDropContext","Droppable","Draggable","Calendar","CheckSquare","GripVertical","Utensils","Dumbbell","ClaudeProvider","TodoistService","GoogleCalendarService","Sidebar","Dashboard","TasksView","Settings","ClaudeAssistant","EditTaskModal","EditEventModal","toDateKey","parseDateKey","formatWeekRange","getWeekDates","filterTasksByString","mockRecipes","mockWorkouts","jsxDEV","_jsxDEV","Fragment","_Fragment","DEBUG","App","_s","activeView","setActiveView","isClaudeSidebarOpen","setIsClaudeSidebarOpen","claudeSidebarWidth","setClaudeSidebarWidth","todoistToken","setTodoistToken","localStorage","getItem","googleCalendarToken","setGoogleCalendarToken","claudeApiKey","setClaudeApiKey","todoistTasks","setTodoistTasks","googleCalendarEvents","setGoogleCalendarEvents","availableProjects","setAvailableProjects","loadingTodoistTasks","setLoadingTodoistTasks","loadingGoogleCalendarEvents","setLoadingGoogleCalendarEvents","todoistError","setTodoistError","googleCalendarError","setGoogleCalendarError","claudeApiError","setClaudeApiError","currentWeekStart","setCurrentWeekStart","today","Date","dayOfWeek","getDay","startOfWeek","setDate","getDate","setHours","tasks","weekDates","unscheduledTasks","filter","task","due","completed","fetchTodoistTasks","token","fetchedTasks","fetchedProjects","Promise","all","getTasks","getProjects","projectMap","forEach","project","id","name","formattedTasks","map","title","content","description","is_completed","priority","source","date","datetime","project_id","project_name","labels","projects","setItem","error","console","fetchGoogleCalendarEvents","events","getEvents","getTime","initGoogleCalendar","initClient","Error","message","pollingInterval","setInterval","clearInterval","handleGoogleAuthClick","handleAuthClick","handleSaveClaudeApiKey","trim","handleSaveTodoistToken","showAddTaskModal","setShowAddTaskModal","newTaskContent","setNewTaskContent","newTaskPriority","setNewTaskPriority","newTaskDueDate","setNewTaskDueDate","newTaskDueDateMode","setNewTaskDueDateMode","showEditTaskModal","setShowEditTaskModal","editingTask","setEditingTask","showEditEventModal","setShowEditEventModal","editingEvent","setEditingEvent","activeFilters","setActiveFilters","Set","sortBy","setSortBy","groupBy","setGroupBy","selectedProjects","setSelectedProjects","plannerMode","setPlannerMode","taskOrder","setTaskOrder","scheduledRecipes","setScheduledRecipes","scheduledWorkouts","setScheduledWorkouts","taskFilter","setTaskFilter","selectedDate","setSelectedDate","showDatePicker","setShowDatePicker","scratchpadContent","setScratchpadContent","dateKey","toLocaleDateString","stored","JSON","stringify","children","dayTaskFilter","setDayTaskFilter","isSidebarCollapsed","setIsSidebarCollapsed","navigateWeek","direction","newWeekStart","getTasksForDate","dateString","dayTasks","startsWith","order","length","orderedTasks","unorderedTasks","taskId","find","t","push","includes","handleTaskDrop","targetDate","insertPosition","newDueDate","prevTasks","prevOrder","newOrderState","Object","keys","key","taskIndex","indexOf","currentOrder","newOrder","splice","updateData","due_string","updateTask","handleAddTask","createdTask","addTask","formattedTask","handleDeleteTask","window","confirm","deleteTask","handleEditTask","updates","formattedUpdates","handleTaskCompletionToggle","currentCompletedStatus","alert","completeTask","renderWeeklyPlanner","DraggableTask","isScheduled","index","draggableId","String","provided","ref","innerRef","draggableProps","dragHandleProps","className","fileName","_jsxFileName","lineNumber","columnNumber","DraggableRecipe","recipe","cookTime","calories","DraggableWorkout","workout","duration","difficulty","TaskModeDay","dayName","dayEvents","event","eventDate","start","droppableId","droppableProps","onClick","toLocaleTimeString","hour","minute","end","placeholder","RecipeModeDay","dayRecipes","lunch","dinner","recipeId","r","WorkoutModeDay","dayWorkouts","workoutId","w","renderSidebar","startOfCurrentWeek","overdueTasks","dueDate","filteredUnscheduledTasks","toLowerCase","AllModeDay","renderDayColumns","weekday","fill","stroke","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","d","getFullYear","month","day","renderContent","onDragEnd","result","destination","log","prev","newScheduled","mealType","Array","isArray","parts","split","existingDateKey","existingMealType","targetArray","endsWith","isRecipe","some","isWorkout","destDate","isNaN","appState","appActions","isCollapsed","setIsCollapsed","toggleClaudeSidebar","style","marginRight","width","toggleSidebar","onMouseDown","e","preventDefault","startX","clientX","startWidth","doMouseMove","mouseMoveEvent","newWidth","Math","max","min","doMouseUp","document","removeEventListener","addEventListener","onSave","onClose","eventId","_c","$RefreshReg$"],"sources":["/home/joebutler/Downloads/lifesync-master/src/App.js"],"sourcesContent":["\n// The code modification enhances Todoist integration by adding token validation and improved error logging.\n\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport {\n  Calendar,\n  CheckSquare,\n  GripVertical,\n  Utensils,\n  Dumbbell,\n} from \"lucide-react\";\nimport { ClaudeProvider } from \"./hooks/useClaudeIntegration\";\n\n// Import services\nimport TodoistService from \"./services/TodoistService\";\nimport GoogleCalendarService from \"./services/GoogleCalendarService\";\n\n// Import components\nimport Sidebar from \"./components/common/Sidebar\";\nimport Dashboard from \"./components/Dashboard\";\nimport TasksView from \"./components/TasksView\";\nimport Settings from \"./components/Settings\";\nimport ClaudeAssistant from \"./components/ClaudeAssistant\";\nimport EditTaskModal from \"./components/tasks/EditTaskModal\";\nimport EditEventModal from \"./components/events/EditEventModal\";\n\n// Import utilities and constants\nimport { toDateKey, parseDateKey, formatWeekRange, getWeekDates } from \"./utils/dateUtils\";\nimport { filterTasksByString } from \"./utils/taskUtils\";\nimport { mockRecipes, mockWorkouts } from \"./constants/mockData\";\n\n// Debug flag\nconst DEBUG = false;\n\nfunction App() {\n  // View state\n  const [activeView, setActiveView] = useState(\"dashboard\");\n  const [isClaudeSidebarOpen, setIsClaudeSidebarOpen] = useState(false);\n  const [claudeSidebarWidth, setClaudeSidebarWidth] = useState(384); // Default width: 24rem * 16px/rem = 384px\n\n  // Integration tokens/states\n  const [todoistToken, setTodoistToken] = useState(() => {\n    return localStorage.getItem(\"todoistToken\") || \"\";\n  });\n  const [googleCalendarToken, setGoogleCalendarToken] = useState(() => {\n    return localStorage.getItem(\"googleCalendarToken\") || \"\";\n  });\n  const [claudeApiKey, setClaudeApiKey] = useState(() => {\n    return localStorage.getItem(\"claude_api_key\") || \"\";\n  });\n\n  // Data states\n  const [todoistTasks, setTodoistTasks] = useState([]);\n  const [googleCalendarEvents, setGoogleCalendarEvents] = useState([]);\n  const [availableProjects, setAvailableProjects] = useState([]);\n\n  // Loading and error states\n  const [loadingTodoistTasks, setLoadingTodoistTasks] = useState(false);\n  const [loadingGoogleCalendarEvents, setLoadingGoogleCalendarEvents] = useState(false);\n  const [todoistError, setTodoistError] = useState(null);\n  const [googleCalendarError, setGoogleCalendarError] = useState(null);\n  const [claudeApiError, setClaudeApiError] = useState(null);\n\n  // Week navigation state\n  const [currentWeekStart, setCurrentWeekStart] = useState(() => {\n    const today = new Date();\n    const dayOfWeek = today.getDay();\n    const startOfWeek = new Date(today);\n    startOfWeek.setDate(today.getDate() - dayOfWeek);\n    startOfWeek.setHours(0, 0, 0, 0);\n    return startOfWeek;\n  });\n\n  // Derived state\n  const tasks = todoistTasks;\n  const weekDates = getWeekDates(currentWeekStart);\n  const unscheduledTasks = tasks.filter((task) => !task.due && !task.completed);\n\n  // Todoist Integration\n  const fetchTodoistTasks = useCallback(\n    async (token) => {\n      if (!token) return;\n\n      setLoadingTodoistTasks(true);\n      setTodoistError(null);\n      try {\n        const [fetchedTasks, fetchedProjects] = await Promise.all([\n          TodoistService.getTasks(token),\n          TodoistService.getProjects(token),\n        ]);\n\n        const projectMap = {};\n        fetchedProjects.forEach((project) => {\n          projectMap[project.id] = project.name;\n        });\n\n        const formattedTasks = fetchedTasks.map((task) => {\n          return {\n            id: task.id,\n            title: task.content, // Todoist uses 'content' for task title\n            content: task.content, // Also keep content for consistency\n            description: task.description || \"\", // Task description\n            completed: task.is_completed || false, // REST API uses 'is_completed'\n            priority: task.priority, // Todoist priority (1-4, 4 is highest)\n            source: \"todoist\",\n            due: task.due ? task.due.date || task.due.datetime : null, // Extract due date if available\n            project_id: task.project_id || null,\n            project_name: task.project_id ? projectMap[task.project_id] : null, // Only set if actually has a project\n            labels: task.labels || [], // Task labels\n          };\n        });\n        setTodoistTasks(formattedTasks);\n\n        // Set available projects (only actual projects, no Inbox)\n        const projects = fetchedProjects.map((project) => ({\n          id: project.id,\n          name: project.name,\n        }));\n\n        setAvailableProjects(projects);\n\n        localStorage.setItem(\"todoistToken\", token); // Save token only if fetch is successful\n      } catch (error) {\n        setTodoistError(error);\n        console.error(\"Failed to fetch Todoist tasks:\", error);\n      } finally {\n        setLoadingTodoistTasks(false);\n      }\n    },\n    [\n      setLoadingTodoistTasks,\n      setTodoistError,\n      setTodoistTasks,\n      setAvailableProjects,\n    ],\n  );\n\n  useEffect(() => {\n    if (todoistToken) {\n      fetchTodoistTasks(todoistToken);\n    }\n  }, [todoistToken, fetchTodoistTasks]);\n\n  const fetchGoogleCalendarEvents = useCallback(\n    async (token) => {\n      if (!token) return;\n\n      setLoadingGoogleCalendarEvents(true);\n      setGoogleCalendarError(null);\n      try {\n        const events = await GoogleCalendarService.getEvents(\n          token,\n          new Date(currentWeekStart),\n          new Date(currentWeekStart.getTime() + 7 * 24 * 60 * 60 * 1000)\n        );\n        setGoogleCalendarEvents(events);\n        localStorage.setItem(\"googleCalendarToken\", token);\n      } catch (error) {\n        setGoogleCalendarError(error);\n        console.error(\"Failed to fetch Google Calendar events:\", error);\n      } finally {\n        setLoadingGoogleCalendarEvents(false);\n      }\n    },\n    [currentWeekStart, setLoadingGoogleCalendarEvents, setGoogleCalendarError]\n  );\n\n  \n\n  useEffect(() => {\n    const initGoogleCalendar = async () => {\n      try {\n        await GoogleCalendarService.initClient();\n        if (googleCalendarToken) {\n          // Attempt to fetch events if a token already exists (e.g., from localStorage)\n          // This might require a silent re-authentication or token refresh\n          fetchGoogleCalendarEvents(googleCalendarToken);\n        }\n      } catch (error) {\n        setGoogleCalendarError(\n          new Error(\n            `Failed to initialize Google Calendar client: ${error.message}`,\n          ),\n        );\n        console.error(\"Google Calendar init error:\", error);\n      }\n    };\n    initGoogleCalendar();\n  }, [googleCalendarToken, fetchGoogleCalendarEvents]);\n\n  // Polling for Todoist tasks every 5 minutes\n  useEffect(() => {\n    let pollingInterval;\n    if (todoistToken) {\n      pollingInterval = setInterval(\n        () => {\n          fetchTodoistTasks(todoistToken);\n        },\n        5 * 60 * 1000,\n      ); // 5 minutes\n    }\n    return () => clearInterval(pollingInterval);\n  }, [todoistToken, fetchTodoistTasks]);\n\n  // Polling for Google Calendar events every 5 minutes\n  useEffect(() => {\n    let pollingInterval;\n    if (googleCalendarToken) {\n      pollingInterval = setInterval(\n        () => {\n          fetchGoogleCalendarEvents(googleCalendarToken);\n        },\n        5 * 60 * 1000,\n      ); // 5 minutes\n    }\n    return () => clearInterval(pollingInterval);\n  }, [googleCalendarToken, currentWeekStart, fetchGoogleCalendarEvents]); // Re-fetch if week changes\n\n  const handleGoogleAuthClick = async () => {\n    try {\n      const token = await GoogleCalendarService.handleAuthClick();\n      setGoogleCalendarToken(token);\n      fetchGoogleCalendarEvents(token);\n    } catch (error) {\n      setGoogleCalendarError(error);\n      console.error(\"Google authentication failed:\", error);\n    }\n  };\n\n  const handleSaveClaudeApiKey = () => {\n    if (claudeApiKey.trim()) {\n      localStorage.setItem(\"claude_api_key\", claudeApiKey);\n      setClaudeApiError(null);\n      // You can add validation here if needed\n    } else {\n      setClaudeApiError(new Error(\"Please enter a valid Anthropic API key.\"));\n    }\n  };\n\n  const handleSaveTodoistToken = () => {\n    if (todoistToken) {\n      fetchTodoistTasks(todoistToken);\n    } else {\n      setTodoistError(new Error(\"Please enter a Todoist API token.\"));\n    }\n  };\n\n\n  const [showAddTaskModal, setShowAddTaskModal] = useState(false);\n  const [newTaskContent, setNewTaskContent] = useState(\"\");\n  const [newTaskPriority, setNewTaskPriority] = useState(1);\n  const [newTaskDueDate, setNewTaskDueDate] = useState(\"\");\n  const [newTaskDueDateMode, setNewTaskDueDateMode] = useState(\"natural\"); // 'natural' or 'picker'\n\n  const [showEditTaskModal, setShowEditTaskModal] = useState(false);\n  const [editingTask, setEditingTask] = useState(null); // Stores the task being edited\n\n  // Calendar event editing states\n  const [showEditEventModal, setShowEditEventModal] = useState(false);\n  const [editingEvent, setEditingEvent] = useState(null); // Stores the event being edited\n\n  // Filter and sort states - support multiple active filters\n  const [activeFilters, setActiveFilters] = useState(new Set([\"all\"])); // Set of active filter keys\n  const [sortBy, setSortBy] = useState(\"default\"); // 'default', 'date', 'priority', 'alphabetical'\n  const [groupBy, setGroupBy] = useState(\"none\"); // 'none', 'project', 'priority', 'date', 'label'\n  const [selectedProjects, setSelectedProjects] = useState(new Set()); // Set of selected project IDs\n\n  // Weekly planner state\n  const [plannerMode, setPlannerMode] = useState(\"tasks\"); // 'tasks', 'recipes', 'workouts', 'all'\n  const [taskOrder, setTaskOrder] = useState({}); // Store task order by date\n  const [scheduledRecipes, setScheduledRecipes] = useState({}); // Store scheduled recipes by date and meal type\n  const [scheduledWorkouts, setScheduledWorkouts] = useState({}); // Store scheduled workouts by date\n  const [taskFilter, setTaskFilter] = useState(\"all\"); // 'all', 'bridge_club', 'home', 'urgent'\n\n  // Day Planner state\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [showDatePicker, setShowDatePicker] = useState(false);\n  const [scratchpadContent, setScratchpadContent] = useState(() => {\n    const dateKey = new Date().toLocaleDateString('en-CA'); // YYYY-MM-DD format\n    const stored = localStorage.getItem(`scratchpad-${dateKey}`);\n    return stored || JSON.stringify({\n      id: 'root',\n      content: '',\n      children: []\n    });\n  });\n  const [dayTaskFilter, setDayTaskFilter] = useState(\"all\"); // 'all', 'bridge_club', 'home', 'uncategorised'\n\n  // Sidebar state\n  const [isSidebarCollapsed, setIsSidebarCollapsed] = useState(false);\n\n  // Load scratchpad content when selected date changes\n  useEffect(() => {\n    const dateKey = selectedDate.toLocaleDateString('en-CA'); // YYYY-MM-DD format\n    const stored = localStorage.getItem(`scratchpad-${dateKey}`);\n    setScratchpadContent(stored || JSON.stringify({\n      id: 'root',\n      content: '',\n      children: []\n    }));\n  }, [selectedDate]);\n\n  // Week navigation utilities (now imported from dateUtils)\n\n  const navigateWeek = (direction) => {\n    const newWeekStart = new Date(currentWeekStart);\n    newWeekStart.setDate(currentWeekStart.getDate() + direction * 7);\n    setCurrentWeekStart(newWeekStart);\n  };\n\n  const getTasksForDate = (date) => {\n    const dateString = toDateKey(date);\n    const dayTasks = tasks.filter(\n      (task) => task.due && task.due.startsWith(dateString) && !task.completed,\n    );\n\n    // Apply custom ordering if it exists\n    const order = taskOrder[dateString];\n    if (order && order.length > 0) {\n      const orderedTasks = [];\n      const unorderedTasks = [];\n\n      // First, add tasks in the specified order\n      order.forEach((taskId) => {\n        const task = dayTasks.find((t) => t.id === taskId);\n        if (task) {\n          orderedTasks.push(task);\n        }\n      });\n\n      // Then add any tasks that aren't in the order (new tasks)\n      dayTasks.forEach((task) => {\n        if (!order.includes(task.id)) {\n          unorderedTasks.push(task);\n        }\n      });\n\n      return [...orderedTasks, ...unorderedTasks];\n    }\n\n    return dayTasks;\n  };\n\n  const handleTaskDrop = useCallback(\n    async (taskId, targetDate, insertPosition = null) => {\n      if (!todoistToken) {\n        setTodoistError(new Error(\"Todoist API token is not set.\"));\n        return;\n      }\n\n      // Update local state immediately (optimistic update)\n      const newDueDate = targetDate ? toDateKey(targetDate) : null;\n      setTodoistTasks((prevTasks) =>\n        prevTasks.map((task) =>\n          task.id === taskId ? { ...task, due: newDueDate } : task,\n        ),\n      );\n\n      // Handle reordering and cross-column positioning\n      if (targetDate && insertPosition !== null) {\n        const dateKey = toDateKey(targetDate);\n        setTaskOrder((prevOrder) => {\n          const newOrderState = { ...prevOrder };\n\n          // Remove task from all existing orders (in case it's moving between columns)\n          Object.keys(newOrderState).forEach((key) => {\n            const order = newOrderState[key];\n            const taskIndex = order.indexOf(taskId);\n            if (taskIndex > -1) {\n              newOrderState[key] = order.filter((id) => id !== taskId);\n            }\n          });\n\n          // Get current order for target date\n          const currentOrder = newOrderState[dateKey] || [];\n          const newOrder = [...currentOrder];\n\n          // Insert at the new position\n          newOrder.splice(insertPosition, 0, taskId);\n\n          newOrderState[dateKey] = newOrder;\n\n          return newOrderState;\n        });\n      }\n\n      try {\n        let updateData;\n        if (targetDate === null) {\n          // Dropping to sidebar - remove due date\n          updateData = { due_string: null };\n        } else {\n          // Dropping to a day - set due date\n          const dateString = toDateKey(targetDate);\n          updateData = { due_string: dateString };\n        }\n\n        await TodoistService.updateTask(todoistToken, taskId, updateData);\n      } catch (error) {\n        // Revert the optimistic update on error\n        setTodoistTasks((prevTasks) =>\n          prevTasks.map((task) =>\n            task.id === taskId\n              ? { ...task, due: task.due } // You might want to store the original value\n              : task,\n          ),\n        );\n        setTodoistError(error);\n        console.error(\"Failed to update task date:\", error);\n      }\n    },\n    [todoistToken, setTodoistError, setTodoistTasks, setTaskOrder],\n  );\n\n  // Simplified drag handlers using HTML5 drag API\n\n  // Use extracted utility functions for tasks view only\n\n  const handleAddTask = async () => {\n    if (!todoistToken) {\n      setTodoistError(\n        new Error(\"Todoist API token is not set. Please go to settings.\"),\n      );\n      return;\n    }\n    if (!newTaskContent.trim()) {\n      setTodoistError(new Error(\"Task content cannot be empty.\"));\n      return;\n    }\n\n    setLoadingTodoistTasks(true);\n    setTodoistError(null);\n    try {\n      const createdTask = await TodoistService.addTask(todoistToken, {\n        content: newTaskContent,\n        priority: newTaskPriority,\n        due_string: newTaskDueDate, // Todoist expects 'due_string' for natural language dates\n      });\n\n      // Format the created task and add it to local state immediately\n      const formattedTask = {\n        id: createdTask.id,\n        title: createdTask.content,\n        content: createdTask.content,\n        completed: createdTask.is_completed || false,\n        priority: createdTask.priority,\n        source: \"todoist\",\n        due: createdTask.due\n          ? createdTask.due.date || createdTask.due.datetime\n          : null,\n      };\n\n      setTodoistTasks((prevTasks) => [...prevTasks, formattedTask]);\n      setNewTaskContent(\"\");\n      setNewTaskPriority(1);\n      setNewTaskDueDate(\"\");\n      setShowAddTaskModal(false);\n    } catch (error) {\n      setTodoistError(error);\n      console.error(\"Failed to add Todoist task:\", error);\n    } finally {\n      setLoadingTodoistTasks(false);\n    }\n  };\n\n  const handleDeleteTask = async (taskId) => {\n    if (!todoistToken) {\n      setTodoistError(\n        new Error(\"Todoist API token is not set. Please go to settings.\"),\n      );\n      return;\n    }\n    if (!window.confirm(\"Are you sure you want to delete this task?\")) {\n      return;\n    }\n\n    setLoadingTodoistTasks(true);\n    setTodoistError(null);\n    try {\n      await TodoistService.deleteTask(todoistToken, taskId);\n      setTodoistTasks((prevTasks) =>\n        prevTasks.filter((task) => task.id !== taskId),\n      );\n    } catch (error) {\n      setTodoistError(error);\n      console.error(\"Failed to delete Todoist task:\", error);\n    } finally {\n      setLoadingTodoistTasks(false);\n    }\n  };\n\n  const handleEditTask = async (taskId, updates) => {\n    if (!todoistToken) {\n      setTodoistError(\n        new Error(\"Todoist API token is not set. Please go to settings.\"),\n      );\n      return;\n    }\n    setLoadingTodoistTasks(true);\n    setTodoistError(null);\n    try {\n      // Ensure due_string is correctly passed if a due date is present\n      const formattedUpdates = { ...updates };\n      if (formattedUpdates.due_string === \"\") {\n        formattedUpdates.due_string = null; // Clear due date if empty string is passed\n      }\n\n      await TodoistService.updateTask(todoistToken, taskId, formattedUpdates);\n\n      // Update local state immediately instead of refetching\n      setTodoistTasks((prevTasks) =>\n        prevTasks.map((task) =>\n          task.id === taskId\n            ? {\n                ...task,\n                content: updates.content || task.content,\n                title: updates.content || task.title,\n                priority: updates.priority || task.priority,\n                due: updates.due_string || task.due,\n              }\n            : task,\n        ),\n      );\n\n      setEditingTask(null); // Clear editing task state\n      setShowEditTaskModal(false); // Close the modal\n    } catch (error) {\n      setTodoistError(error);\n      console.error(\"Failed to edit Todoist task:\", error);\n    } finally {\n      setLoadingTodoistTasks(false);\n    }\n  };\n\n  const handleTaskCompletionToggle = async (taskId, currentCompletedStatus) => {\n    if (!todoistToken) {\n      setTodoistError(\n        new Error(\"Todoist API token is not set. Please go to settings.\"),\n      );\n      return;\n    }\n\n    setLoadingTodoistTasks(true);\n    setTodoistError(null);\n    try {\n      if (currentCompletedStatus) {\n        // Todoist API doesn't have a direct 'uncomplete' command via sync API for items.\n        // For simplicity, we'll only allow completion for now.\n        // A more robust solution might involve re-adding the task or using a different API.\n        alert(\n          \"Uncompleting tasks is not yet supported for Todoist integration.\",\n        );\n      } else {\n        await TodoistService.completeTask(todoistToken, taskId);\n        setTodoistTasks((prevTasks) =>\n          prevTasks.map((task) =>\n            task.id === taskId ? { ...task, completed: true } : task,\n          ),\n        );\n      }\n    } catch (error) {\n      setTodoistError(error);\n      console.error(\"Failed to update Todoist task:\", error);\n    } finally {\n      setLoadingTodoistTasks(false);\n    }\n  };\n\n  // Modal components now imported from separate files\n\n  const renderWeeklyPlanner = () => {\n    // weekDates and unscheduledTasks are now defined at the component level\n\n    // Draggable components for different content types\n    const DraggableTask = ({ task, isScheduled = false, index = 0 }) => (\n      <Draggable draggableId={String(task.id)} index={index}>\n        {(provided) => (\n          <div\n            ref={provided.innerRef}\n            {...provided.draggableProps}\n            {...provided.dragHandleProps}\n            className={`p-2 rounded-md cursor-move group transition-colors ${\n              isScheduled\n                ? \"bg-red-100 hover:bg-red-200\"\n                : \"bg-gray-100 hover:bg-gray-200\"\n            }`}\n          >\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p\n                  className={`text-xs font-medium ${isScheduled ? \"text-red-900\" : \"text-gray-900\"}`}\n                >\n                  {task.content}\n                </p>\n                <div className=\"flex items-center text-xs mt-1 space-x-1\">\n                  </div>\n              </div>\n              <GripVertical\n                className={`w-3 h-3 opacity-0 group-hover:opacity-100 ${\n                  isScheduled ? \"text-red-600\" : \"text-gray-400\"\n                }`}\n              />\n            </div>\n          </div>\n        )}\n      </Draggable>\n    );\n\n    const DraggableRecipe = ({ recipe, isScheduled = false, index = 0 }) => (\n      <Draggable draggableId={String(recipe.id)} index={index}>\n        {(provided) => (\n          <div\n            ref={provided.innerRef}\n            {...provided.draggableProps}\n            {...provided.dragHandleProps}\n            className={`p-2 rounded-md cursor-move group transition-colors ${\n              isScheduled\n                ? \"bg-orange-100 hover:bg-orange-200\"\n                : \"bg-gray-100 hover:bg-gray-200\"\n            }`}\n          >\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p\n                  className={`text-xs font-medium ${isScheduled ? \"text-orange-900\" : \"text-gray-900\"}`}\n                >\n                  {recipe.name}\n                </p>\n                <div className=\"flex items-center text-xs mt-1 space-x-1\">\n                  <span\n                    className={`px-1 py-0.5 rounded-full ${\n                      isScheduled\n                        ? \"bg-orange-200 text-orange-700\"\n                        : \"bg-gray-200 text-gray-600\"\n                    }`}\n                  >\n                    {recipe.cookTime}\n                  </span>\n                  <span\n                    className={`px-1 py-0.5 rounded-full ${\n                      isScheduled\n                        ? \"bg-orange-200 text-orange-700\"\n                        : \"bg-gray-200 text-gray-600\"\n                    }`}\n                  >\n                    {recipe.calories} cal\n                  </span>\n                </div>\n              </div>\n              <GripVertical\n                className={`w-3 h-3 opacity-0 group-hover:opacity-100 ${\n                  isScheduled ? \"text-orange-600\" : \"text-gray-400\"\n                }`}\n              />\n            </div>\n          </div>\n        )}\n      </Draggable>\n    );\n\n    const DraggableWorkout = ({ workout, isScheduled = false, index = 0 }) => (\n      <Draggable draggableId={String(workout.id)} index={index}>\n        {(provided) => (\n          <div\n            ref={provided.innerRef}\n            {...provided.draggableProps}\n            {...provided.dragHandleProps}\n            className={`p-2 rounded-md cursor-move group transition-colors ${\n              isScheduled\n                ? \"bg-green-100 hover:bg-green-200\"\n                : \"bg-gray-100 hover:bg-gray-200\"\n            }`}\n          >\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p\n                  className={`text-xs font-medium ${isScheduled ? \"text-green-900\" : \"text-gray-900\"}`}\n                >\n                  {workout.name}\n                </p>\n                <div className=\"flex items-center text-xs mt-1 space-x-1\">\n                  <span\n                    className={`px-1 py-0.5 rounded-full ${\n                      isScheduled\n                        ? \"bg-green-200 text-green-700\"\n                        : \"bg-gray-200 text-gray-600\"\n                    }`}\n                  >\n                    {workout.duration}\n                  </span>\n                  <span\n                    className={`px-1 py-0.5 rounded-full ${\n                      isScheduled\n                        ? \"bg-green-200 text-green-700\"\n                        : \"bg-gray-200 text-gray-600\"\n                    }`}\n                  >\n                    {workout.difficulty}\n                  </span>\n                </div>\n              </div>\n              <GripVertical\n                className={`w-3 h-3 opacity-0 group-hover:opacity-100 ${\n                  isScheduled ? \"text-green-600\" : \"text-gray-400\"\n                }`}\n              />\n            </div>\n          </div>\n        )}\n      </Draggable>\n    );\n\n    // Day column components for different modes\n    const TaskModeDay = ({ date, dayName }) => {\n      const dateKey = toDateKey(date);\n      const dayTasks = getTasksForDate(date);\n      const dayEvents = googleCalendarEvents.filter((event) => {\n        const eventDate = new Date(event.start);\n        return toDateKey(eventDate) === dateKey;\n      });\n\n      return (\n        <Droppable droppableId={dateKey}>\n          {(provided) => (\n            <div\n              ref={provided.innerRef}\n              {...provided.droppableProps}\n              className=\"bg-gray-50 rounded-lg p-3 min-h-[300px] border-2 border-dashed border-transparent hover:border-blue-300 transition-colors\"\n            >\n              <div className=\"space-y-2\">\n                {dayTasks.map((task, index) => (\n                  <DraggableTask\n                    key={task.id}\n                    task={task}\n                    isScheduled={true}\n                    index={index}\n                  />\n                ))}\n                {dayEvents.map((event) => (\n                  <Draggable\n                    key={event.id}\n                    draggableId={`event-${event.id}`}\n                    index={dayTasks.length + dayEvents.indexOf(event)}\n                  >\n                    {(provided) => (\n                      <div\n                        ref={provided.innerRef}\n                        {...provided.draggableProps}\n                        {...provided.dragHandleProps}\n                        onClick={() => {\n                          setEditingEvent(event);\n                          setShowEditEventModal(true);\n                        }}\n                        className=\"bg-blue-100 p-2 rounded-md cursor-pointer hover:bg-blue-200 transition-colors group\"\n                        title=\"Click to edit • Drag to reschedule\"\n                      >\n                        <div className=\"flex items-center justify-between\">\n                          <div className=\"flex-1\">\n                            <p className=\"text-xs font-medium text-blue-900\">\n                              {event.title}\n                            </p>\n                            <p className=\"text-xs text-blue-600\">\n                              {new Date(event.start).toLocaleTimeString([], {\n                                hour: \"2-digit\",\n                                minute: \"2-digit\",\n                              })}{\" \"}\n                              -\n                              {new Date(event.end).toLocaleTimeString([], {\n                                hour: \"2-digit\",\n                                minute: \"2-digit\",\n                              })}\n                            </p>\n                          </div>\n                          <GripVertical className=\"w-3 h-3 opacity-0 group-hover:opacity-100 text-blue-600\" />\n                        </div>\n                      </div>\n                    )}\n                  </Draggable>\n                ))}\n              </div>\n              {provided.placeholder}\n            </div>\n          )}\n        </Droppable>\n      );\n    };\n\n    const RecipeModeDay = ({ date, dayName }) => {\n      const dateKey = toDateKey(date);\n      const dayRecipes = scheduledRecipes[dateKey] || { lunch: [], dinner: [] };\n\n      return (\n        <div className=\"bg-gray-50 rounded-lg p-2 min-h-[300px] space-y-3\">\n          {/* Lunch Section */}\n          <Droppable droppableId={`${dateKey}-lunch`}>\n            {(provided) => (\n              <div\n                ref={provided.innerRef}\n                {...provided.droppableProps}\n                className=\"bg-white rounded-md p-2 min-h-[120px] border-2 border-dashed border-orange-200 hover:border-orange-300 transition-colors\"\n              >\n                <h4 className=\"text-xs font-semibold text-orange-800 mb-2\">\n                  🍽️ Lunch\n                </h4>\n                <div className=\"space-y-1\">\n                  {dayRecipes.lunch.map((recipeId, index) => {\n                    const recipe = mockRecipes.find((r) => r.id === recipeId);\n                    return recipe ? (\n                      <DraggableRecipe\n                        key={recipe.id}\n                        recipe={recipe}\n                        isScheduled={true}\n                        index={index}\n                      />\n                    ) : null;\n                  })}\n                </div>\n                {provided.placeholder}\n              </div>\n            )}\n          </Droppable>\n\n          {/* Dinner Section */}\n          <Droppable droppableId={`${dateKey}-dinner`}>\n            {(provided) => (\n              <div\n                ref={provided.innerRef}\n                {...provided.droppableProps}\n                className=\"bg-white rounded-md p-2 min-h-[120px] border-2 border-dashed border-orange-200 hover:border-orange-300 transition-colors\"\n              >\n                <h4 className=\"text-xs font-semibold text-orange-800 mb-2\">\n                  🍽️ Dinner\n                </h4>\n                <div className=\"space-y-1\">\n                  {dayRecipes.dinner.map((recipeId, index) => {\n                    const recipe = mockRecipes.find((r) => r.id === recipeId);\n                    return recipe ? (\n                      <DraggableRecipe\n                        key={recipe.id}\n                        recipe={recipe}\n                        isScheduled={true}\n                        index={index}\n                      />\n                    ) : null;\n                  })}\n                </div>\n                {provided.placeholder}\n              </div>\n            )}\n          </Droppable>\n        </div>\n      );\n    };\n\n    const WorkoutModeDay = ({ date, dayName }) => {\n      const dateKey = toDateKey(date);\n      const dayWorkouts = scheduledWorkouts[dateKey] || [];\n\n      return (\n        <Droppable droppableId={dateKey}>\n          {(provided) => (\n            <div\n              ref={provided.innerRef}\n              {...provided.droppableProps}\n              className=\"bg-gray-50 rounded-lg p-3 min-h-[300px] border-2 border-dashed border-transparent hover:border-green-300 transition-colors\"\n            >\n              <div className=\"space-y-2\">\n                {dayWorkouts.map((workoutId, index) => {\n                  const workout = mockWorkouts.find((w) => w.id === workoutId);\n                  return workout ? (\n                    <DraggableWorkout\n                      key={workout.id}\n                      workout={workout}\n                      isScheduled={true}\n                      index={index}\n                    />\n                  ) : null;\n                })}\n              </div>\n              {provided.placeholder}\n            </div>\n          )}\n        </Droppable>\n      );\n    };\n\n    const renderSidebar = () => {\n      switch (plannerMode) {\n        case \"recipes\":\n          return (\n            <Droppable droppableId=\"unscheduled-recipes\">\n              {(provided) => (\n                <div\n                  ref={provided.innerRef}\n                  {...provided.droppableProps}\n                  className=\"w-80 bg-white rounded-xl p-4 shadow-sm border\"\n                >\n                  <h3 className=\"font-semibold text-gray-900 mb-4\">\n                    Available Recipes ({mockRecipes.length})\n                  </h3>\n                  <div className=\"space-y-2 max-h-96 overflow-y-auto\">\n                    {mockRecipes.map((recipe, index) => (\n                      <DraggableRecipe\n                        key={recipe.id}\n                        recipe={recipe}\n                        index={index}\n                      />\n                    ))}\n                  </div>\n                  <div className=\"mt-4 pt-4 border-t\">\n                    <p className=\"text-xs text-gray-500\">\n                      Drag recipes to schedule lunch or dinner\n                    </p>\n                  </div>\n                  {provided.placeholder}\n                </div>\n              )}\n            </Droppable>\n          );\n\n        case \"workouts\":\n          return (\n            <Droppable droppableId=\"unscheduled-workouts\">\n              {(provided) => (\n                <div\n                  ref={provided.innerRef}\n                  {...provided.droppableProps}\n                  className=\"w-80 bg-white rounded-xl p-4 shadow-sm border\"\n                >\n                  <h3 className=\"font-semibold text-gray-900 mb-4\">\n                    Available Workouts ({mockWorkouts.length})\n                  </h3>\n                  <div className=\"space-y-2 max-h-96 overflow-y-auto\">\n                    {mockWorkouts.map((workout, index) => (\n                      <DraggableWorkout\n                        key={workout.id}\n                        workout={workout}\n                        index={index}\n                      />\n                    ))}\n                  </div>\n                  <div className=\"mt-4 pt-4 border-t\">\n                    <p className=\"text-xs text-gray-500\">\n                      Drag workouts to schedule them on specific days\n                    </p>\n                  </div>\n                  {provided.placeholder}\n                </div>\n              )}\n            </Droppable>\n          );\n\n        case \"all\":\n          return (\n            <Droppable droppableId=\"unscheduled-all\">\n              {(provided) => (\n                <div\n                  ref={provided.innerRef}\n                  {...provided.droppableProps}\n                  className=\"w-80 bg-white rounded-xl p-4 shadow-sm border\"\n                >\n                  <h3 className=\"font-semibold text-gray-900 mb-4\">\n                    All Unscheduled Items\n                  </h3>\n                  <div className=\"space-y-2 max-h-96 overflow-y-auto\">\n                    {unscheduledTasks.map((task, index) => (\n                      <DraggableTask key={task.id} task={task} index={index} />\n                    ))}\n                    {mockRecipes.map((recipe, index) => (\n                      <DraggableRecipe\n                        key={recipe.id}\n                        recipe={recipe}\n                        index={index}\n                      />\n                    ))}\n                    {mockWorkouts.map((workout, index) => (\n                      <DraggableWorkout\n                        key={workout.id}\n                        workout={workout}\n                        index={index}\n                      />\n                    ))}\n                  </div>\n                  <div className=\"mt-4 pt-4 border-t\">\n                    <p className=\"text-xs text-gray-500\">\n                      Drag items to schedule them on specific days\n                    </p>\n                  </div>\n                  {provided.placeholder}\n                </div>\n              )}\n            </Droppable>\n          );\n\n        default: // tasks mode\n          const startOfCurrentWeek = new Date(currentWeekStart); // currentWeekStart is already the start of the current week\n          const overdueTasks = tasks.filter((task) => {\n            if (!task.due) return false;\n            const dueDate = new Date(task.due);\n            // An overdue task from the previous week is one that was due before the start of the current week\n            return dueDate < startOfCurrentWeek && !task.completed;\n          });\n\n          const filteredUnscheduledTasks = filterTasksByString(\n            tasks,\n            taskFilter,\n          );\n\n          return (\n            <div className=\"w-80 bg-white rounded-xl p-4 shadow-sm border\">\n              {/* Overdue Tasks Box */}\n              {overdueTasks.length > 0 && (\n                <div\n                  className=\"bg-red-50 border border-red-200 rounded-lg p-3 mb-4\"\n                  key=\"overdue-tasks-box\"\n                >\n                  <h3 className=\"font-semibold text-red-800 mb-2\">\n                    Overdue Tasks ({overdueTasks.length})\n                  </h3>\n                  <div className=\"space-y-2 max-h-40 overflow-y-auto\">\n                    {overdueTasks.map((task, index) => (\n                      <div key={task.id} className=\"bg-red-100 p-2 rounded-md\">\n                        <p className=\"text-xs font-medium text-red-900\">\n                          {task.content}\n                        </p>\n                        <p className=\"text-xs text-red-600\">\n                          Due: {new Date(task.due).toLocaleDateString()}\n                        </p>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n              )}\n\n              {/* Task Filters */}\n              <div className=\"mb-4\">\n                <h3 className=\"font-semibold text-gray-900 mb-2\">\n                  Task Filters\n                </h3>\n                <div\n                  className=\"flex flex-wrap gap-2\"\n                  key=\"task-filters-buttons\"\n                >\n                  <button\n                    onClick={() => setTaskFilter(\"all\")}\n                    className={`px-3 py-1 rounded-full text-xs font-medium ${\n                      taskFilter === \"all\"\n                        ? \"bg-blue-600 text-white\"\n                        : \"bg-gray-100 text-gray-600 hover:bg-gray-200\"\n                    }`}\n                  >\n                    All ({tasks.filter((t) => !t.completed).length})\n                  </button>\n                  <button\n                    onClick={() => setTaskFilter(\"bridge_club\")}\n                    className={`px-3 py-1 rounded-full text-xs font-medium ${\n                      taskFilter === \"bridge_club\"\n                        ? \"bg-blue-600 text-white\"\n                        : \"bg-gray-100 text-gray-600 hover:bg-gray-200\"\n                    }`}\n                  >\n                    Bridge Club (\n                    {\n                      tasks.filter(\n                        (t) =>\n                          t.project_name &&\n                          t.project_name\n                            .toLowerCase()\n                            .includes(\"bridge club\") &&\n                          !t.completed,\n                      ).length\n                    }\n                    )\n                  </button>\n                  <button\n                    onClick={() => setTaskFilter(\"home\")}\n                    className={`px-3 py-1 rounded-full text-xs font-medium ${\n                      taskFilter === \"home\"\n                        ? \"bg-blue-600 text-white\"\n                        : \"bg-gray-100 text-gray-600 hover:bg-gray-200\"\n                    }`}\n                  >\n                    Home (\n                    {\n                      tasks.filter(\n                        (t) =>\n                          t.project_name &&\n                          t.project_name.toLowerCase() === \"home\" &&\n                          !t.completed,\n                      ).length\n                    }\n                    )\n                  </button>\n                  <button\n                    onClick={() => setTaskFilter(\"urgent\")}\n                    className={`px-3 py-1 rounded-full text-xs font-medium ${\n                      taskFilter === \"urgent\"\n                        ? \"bg-blue-600 text-white\"\n                        : \"bg-gray-100 text-gray-600 hover:bg-gray-200\"\n                    }`}\n                  >\n                    Urgent (\n                    {\n                      tasks.filter((t) => t.priority === 4 && !t.completed)\n                        .length\n                    }\n                    )\n                  </button>\n                </div>\n              </div>\n\n              <Droppable droppableId=\"unscheduled\">\n                {(provided) => (\n                  <div\n                    ref={provided.innerRef}\n                    {...provided.droppableProps}\n                    className=\"space-y-2 max-h-96 overflow-y-auto\"\n                  >\n                    <h3 className=\"font-semibold text-gray-900 mb-4\">\n                      Unscheduled Tasks ({filteredUnscheduledTasks.length})\n                    </h3>\n                    {filteredUnscheduledTasks.length === 0 ? (\n                      <p className=\"text-gray-500 text-sm\">\n                        No unscheduled tasks\n                      </p>\n                    ) : (\n                      filteredUnscheduledTasks.map((task, index) => (\n                        <DraggableTask\n                          key={task.id}\n                          task={task}\n                          index={index}\n                        />\n                      ))\n                    )}\n                    {provided.placeholder}\n                  </div>\n                )}\n              </Droppable>\n              <div className=\"mt-4 pt-4 border-t\">\n                <p className=\"text-xs text-gray-500\">\n                  Drag tasks to schedule them on specific days\n                </p>\n              </div>\n            </div>\n          );\n      }\n    };\n\n    const AllModeDay = ({ date, dayName }) => {\n      const dateKey = toDateKey(date);\n      const dayTasks = getTasksForDate(date);\n      const dayRecipes = scheduledRecipes[dateKey] || { lunch: [], dinner: [] };\n      const dayWorkouts = scheduledWorkouts[dateKey] || [];\n      const dayEvents = googleCalendarEvents.filter((event) => {\n        const eventDate = new Date(event.start);\n        return toDateKey(eventDate) === dateKey;\n      });\n\n      return (\n        <div className=\"bg-gray-50 rounded-lg p-2 min-h-[300px] space-y-3\">\n          {/* Events */}\n          <div className=\"bg-blue-50 rounded-md p-2 min-h-[80px] border-2 border-dashed border-blue-200\">\n            <h4 className=\"text-xs font-semibold text-blue-800 mb-2\">\n              🗓️ Events\n            </h4>\n            <div className=\"space-y-1\">\n              {dayEvents.map((event) => (\n                <div key={event.id} className=\"bg-blue-100 p-2 rounded-md\">\n                  <p className=\"text-xs font-medium text-blue-900\">\n                    {event.title}\n                  </p>\n                  <p className=\"text-xs text-blue-600\">\n                    {new Date(event.start).toLocaleTimeString([], {\n                      hour: \"2-digit\",\n                      minute: \"2-digit\",\n                    })}{\" \"}\n                    -\n                    {new Date(event.end).toLocaleTimeString([], {\n                      hour: \"2-digit\",\n                      minute: \"2-digit\",\n                    })}\n                  </p>\n                </div>\n              ))}\n            </div>\n          </div>\n\n          {/* Tasks */}\n          <Droppable droppableId={`${dateKey}-tasks`}>\n            {(provided) => (\n              <div\n                ref={provided.innerRef}\n                {...provided.droppableProps}\n                className=\"bg-white rounded-md p-2 min-h-[80px] border-2 border-dashed border-blue-200 hover:border-blue-300 transition-colors\"\n              >\n                <h4 className=\"text-xs font-semibold text-blue-800 mb-2\">\n                  ✅ Tasks\n                </h4>\n                <div className=\"space-y-1\">\n                  {dayTasks.map((task, index) => (\n                    <DraggableTask\n                      key={task.id}\n                      task={task}\n                      isScheduled={true}\n                      index={index}\n                    />\n                  ))}\n                </div>\n                {provided.placeholder}\n              </div>\n            )}\n          </Droppable>\n\n          {/* Lunch */}\n          <Droppable droppableId={`${dateKey}-lunch`}>\n            {(provided) => (\n              <div\n                ref={provided.innerRef}\n                {...provided.droppableProps}\n                className=\"bg-white rounded-md p-2 min-h-[80px] border-2 border-dashed border-orange-200 hover:border-orange-300 transition-colors\"\n              >\n                <h4 className=\"text-xs font-semibold text-orange-800 mb-2\">\n                  🍽️ Lunch\n                </h4>\n                <div className=\"space-y-1\">\n                  {dayRecipes.lunch.map((recipeId, index) => {\n                    const recipe = mockRecipes.find((r) => r.id === recipeId);\n                    return recipe ? (\n                      <DraggableRecipe\n                        key={recipe.id}\n                        recipe={recipe}\n                        isScheduled={true}\n                        index={index}\n                      />\n                    ) : null;\n                  })}\n                </div>\n                {provided.placeholder}\n              </div>\n            )}\n          </Droppable>\n\n          {/* Dinner */}\n          <Droppable droppableId={`${dateKey}-dinner`}>\n            {(provided) => (\n              <div\n                ref={provided.innerRef}\n                {...provided.droppableProps}\n                className=\"bg-white rounded-md p-2 min-h-[80px] border-2 border-dashed border-orange-200 hover:border-orange-300 transition-colors\"\n              >\n                <h4 className=\"text-xs font-semibold text-orange-800 mb-2\">\n                  🍽️ Dinner\n                </h4>\n                <div className=\"space-y-1\">\n                  {dayRecipes.dinner.map((recipeId, index) => {\n                    const recipe = mockRecipes.find((r) => r.id === recipeId);\n                    return recipe ? (\n                      <DraggableRecipe\n                        key={recipe.id}\n                        recipe={recipe}\n                        isScheduled={true}\n                        index={index}\n                      />\n                    ) : null;\n                  })}\n                </div>\n                {provided.placeholder}\n              </div>\n            )}\n          </Droppable>\n\n          {/* Workouts */}\n          <Droppable droppableId={`${dateKey}-workouts`}>\n            {(provided) => (\n              <div\n                ref={provided.innerRef}\n                {...provided.droppableProps}\n                className=\"bg-white rounded-md p-2 min-h-[80px] border-2 border-dashed border-green-200 hover:border-green-300 transition-colors\"\n              >\n                <h4 className=\"text-xs font-semibold text-green-800 mb-2\">\n                  💪 Workouts\n                </h4>\n                <div className=\"space-y-1\">\n                  {dayWorkouts.map((workoutId, index) => {\n                    const workout = mockWorkouts.find(\n                      (w) => w.id === workoutId,\n                    );\n                    return workout ? (\n                      <DraggableWorkout\n                        key={workout.id}\n                        workout={workout}\n                        isScheduled={true}\n                        index={index}\n                      />\n                    ) : null;\n                  })}\n                </div>\n                {provided.placeholder}\n              </div>\n            )}\n          </Droppable>\n        </div>\n      );\n    };\n\n    const renderDayColumns = () => {\n      switch (plannerMode) {\n        case \"recipes\":\n          return weekDates.map((date) => {\n            const dateKey = toDateKey(date);\n            return (\n              <RecipeModeDay\n                key={dateKey}\n                date={date}\n                dayName={date.toLocaleDateString(\"en-US\", { weekday: \"short\" })}\n              />\n            );\n          });\n        case \"workouts\":\n          return weekDates.map((date) => {\n            const dateKey = toDateKey(date);\n            return (\n              <WorkoutModeDay\n                key={dateKey}\n                date={date}\n                dayName={date.toLocaleDateString(\"en-US\", { weekday: \"short\" })}\n              />\n            );\n          });\n        case \"all\":\n          return weekDates.map((date) => {\n            const dateKey = toDateKey(date);\n            return (\n              <AllModeDay\n                key={dateKey}\n                date={date}\n                dayName={date.toLocaleDateString(\"en-US\", { weekday: \"short\" })}\n              />\n            );\n          });\n        default:\n          return weekDates.map((date) => {\n            const dateKey = toDateKey(date);\n            return (\n              <TaskModeDay\n                key={dateKey}\n                date={date}\n                dayName={date.toLocaleDateString(\"en-US\", { weekday: \"short\" })}\n              />\n            );\n          });\n      }\n    };\n\n    return (\n      <div className=\"p-6\">\n        {/* Week Navigation and Mode Toggle Header */}\n        <div className=\"bg-white rounded-xl p-4 shadow-sm border mb-6 space-y-4\">\n          {/* Week Navigation */}\n          <div className=\"flex items-center justify-between\">\n            <button\n              onClick={() => navigateWeek(-1)}\n              className=\"flex items-center px-3 py-2 text-gray-600 hover:text-gray-900 hover:bg-gray-100 rounded-lg transition-colors\"\n            >\n              <svg\n                className=\"w-4 h-4 mr-2\"\n                fill=\"none\"\n                stroke=\"currentColor\"\n                viewBox=\"0 0 24 24\"\n              >\n                <path\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  strokeWidth=\"2\"\n                  d=\"M15 19l-7-7 7-7\"\n                />\n              </svg>\n              Previous Week\n            </button>\n\n            <div className=\"text-center\">\n              <h2 className=\"text-xl font-semibold text-gray-900\">\n                {formatWeekRange(currentWeekStart)}\n              </h2>\n              <p className=\"text-sm text-gray-500\">\n                {new Date().getFullYear()}\n              </p>\n            </div>\n\n            <button\n              onClick={() => navigateWeek(1)}\n              className=\"flex items-center px-3 py-2 text-gray-600 hover:text-gray-900 hover:bg-gray-100 rounded-lg transition-colors\"\n            >\n              Next Week\n              <svg\n                className=\"w-4 h-4 ml-2\"\n                fill=\"none\"\n                stroke=\"currentColor\"\n                viewBox=\"0 0 24 24\"\n              >\n                <path\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  strokeWidth=\"2\"\n                  d=\"M9 5l7 7-7 7\"\n                />\n              </svg>\n            </button>\n          </div>\n\n          {/* Mode Toggle */}\n          <div className=\"flex items-center justify-center\">\n            <div className=\"bg-gray-100 p-1 rounded-lg flex space-x-1\">\n              <button\n                onClick={() => setPlannerMode(\"tasks\")}\n                className={`px-4 py-2 rounded-md text-sm font-medium transition-colors ${\n                  plannerMode === \"tasks\"\n                    ? \"bg-white text-blue-600 shadow-sm\"\n                    : \"text-gray-600 hover:text-gray-900\"\n                }`}\n              >\n                <CheckSquare className=\"w-4 h-4 inline mr-2\" />\n                Tasks\n              </button>\n              <button\n                onClick={() => setPlannerMode(\"recipes\")}\n                className={`px-4 py-2 rounded-md text-sm font-medium transition-colors ${\n                  plannerMode === \"recipes\"\n                    ? \"bg-white text-orange-600 shadow-sm\"\n                    : \"text-gray-600 hover:text-gray-900\"\n                }`}\n              >\n                <Utensils className=\"w-4 h-4 inline mr-2\" />\n                Recipes\n              </button>\n              <button\n                onClick={() => setPlannerMode(\"workouts\")}\n                className={`px-4 py-2 rounded-md text-sm font-medium transition-colors ${\n                  plannerMode === \"workouts\"\n                    ? \"bg-white text-green-600 shadow-sm\"\n                    : \"text-gray-600 hover:text-gray-900\"\n                }`}\n              >\n                <Dumbbell className=\"w-4 h-4 inline mr-2\" />\n                Workouts\n              </button>\n              <button\n                onClick={() => setPlannerMode(\"all\")}\n                className={`px-4 py-2 rounded-md text-sm font-medium transition-colors ${\n                  plannerMode === \"all\"\n                    ? \"bg-white text-gray-800 shadow-sm\"\n                    : \"text-gray-600 hover:text-gray-900\"\n                }`}\n              >\n                All\n              </button>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"flex gap-6\">\n          {/* Sidebar */}\n          {renderSidebar()}\n\n          {/* Week Calendar */}\n          <div className=\"flex-1\">\n            {/* Day Headers */}\n            <div className=\"grid grid-cols-7 gap-4 mb-4\">\n              {weekDates.map((date, index) => (\n                <div key={index} className=\"text-center\">\n                  <h3 className=\"font-semibold text-gray-900\">\n                    {date.toLocaleDateString(\"en-US\", { weekday: \"short\" })}\n                  </h3>\n                  <p className=\"text-sm text-gray-600\">\n                    {date.toLocaleDateString(\"en-US\", {\n                      month: \"short\",\n                      day: \"numeric\",\n                    })}\n                  </p>\n                </div>\n              ))}\n            </div>\n\n            {/* Day Columns */}\n            <div className=\"grid grid-cols-7 gap-4\">{renderDayColumns()}</div>\n          </div>\n        </div>\n\n        {/* Mode-specific Legend */}\n        <div className=\"mt-6 flex items-center justify-center space-x-6 text-sm\">\n          {plannerMode === \"tasks\" && (\n            <>\n              <div className=\"flex items-center\">\n                <div className=\"w-3 h-3 bg-red-100 rounded mr-2\"></div>\n                <span>Todoist Tasks</span>\n              </div>\n              <div className=\"flex items-center\">\n                <div className=\"w-3 h-3 bg-blue-100 rounded mr-2\"></div>\n                <span>Events</span>\n              </div>\n            </>\n          )}\n          {plannerMode === \"recipes\" && (\n            <>\n              <div className=\"flex items-center\">\n                <div className=\"w-3 h-3 bg-orange-100 rounded mr-2\"></div>\n                <span>Recipes</span>\n              </div>\n              <div className=\"flex items-center\">\n                <div className=\"w-3 h-3 bg-orange-200 rounded mr-2\"></div>\n                <span>Lunch</span>\n              </div>\n              <div className=\"flex items-center\">\n                <div className=\"w-3 h-3 bg-orange-300 rounded mr-2\"></div>\n                <span>Dinner</span>\n              </div>\n            </>\n          )}\n          {plannerMode === \"workouts\" && (\n            <div className=\"flex items-center\">\n              <div className=\"w-3 h-3 bg-green-100 rounded mr-2\"></div>\n              <span>Workouts</span>\n            </div>\n          )}\n          {plannerMode === \"all\" && (\n            <>\n              <div className=\"flex items-center\">\n                <div className=\"w-3 h-3 bg-red-100 rounded mr-2\"></div>\n                <span>Todoist Tasks</span>\n              </div>\n              <div className=\"flex items-center\">\n                <div className=\"w-3 h-3 bg-blue-100 rounded mr-2\"></div>\n                <span>Events</span>\n              </div>\n              <div className=\"flex items-center\">\n                <div className=\"w-3 h-3 bg-orange-100 rounded mr-2\"></div>\n                <span>Recipes</span>\n              </div>\n              <div className=\"flex items-center\">\n                <div className=\"w-3 h-3 bg-green-100 rounded mr-2\"></div>\n                <span>Workouts</span>\n              </div>\n            </>\n          )}\n        </div>\n      </div>\n    );\n  };\n\n\n\n  const renderContent = () => {\n    switch (activeView) {\n      case \"dashboard\":\n        return (\n          <Dashboard\n            selectedDate={selectedDate}\n            setSelectedDate={setSelectedDate}\n            showDatePicker={showDatePicker}\n            setShowDatePicker={setShowDatePicker}\n            tasks={tasks}\n            getTasksForDate={getTasksForDate}\n            scratchpadContent={scratchpadContent}\n            setScratchpadContent={(content) => {\n              setScratchpadContent(content);\n              const dateKey = selectedDate.toLocaleDateString('en-CA');\n              localStorage.setItem(`scratchpad-${dateKey}`, content);\n            }}\n            handleTaskCompletionToggle={handleTaskCompletionToggle}\n            scheduledRecipes={scheduledRecipes}\n            scheduledWorkouts={scheduledWorkouts}\n            dayTaskFilter={dayTaskFilter}\n            setDayTaskFilter={setDayTaskFilter}\n            setShowAddTaskModal={setShowAddTaskModal}\n            setEditingTask={setEditingTask}\n            setShowEditTaskModal={setShowEditTaskModal}\n            editingTask={editingTask}\n            showEditTaskModal={showEditTaskModal}\n          />\n        );\n      case \"planner\":\n        return renderWeeklyPlanner();\n      case \"tasks\":\n        return (\n          <TasksView\n            tasks={tasks}\n            todoistToken={todoistToken}\n            loadingTodoistTasks={loadingTodoistTasks}\n            todoistError={todoistError}\n            fetchTodoistTasks={fetchTodoistTasks}\n            setShowAddTaskModal={setShowAddTaskModal}\n            showAddTaskModal={showAddTaskModal}\n            newTaskContent={newTaskContent}\n            setNewTaskContent={setNewTaskContent}\n            newTaskPriority={newTaskPriority}\n            setNewTaskPriority={setNewTaskPriority}\n            newTaskDueDate={newTaskDueDate}\n            setNewTaskDueDate={setNewTaskDueDate}\n            newTaskDueDateMode={newTaskDueDateMode}\n            setNewTaskDueDateMode={setNewTaskDueDateMode}\n            handleAddTask={handleAddTask}\n            handleDeleteTask={handleDeleteTask}\n            handleTaskCompletionToggle={handleTaskCompletionToggle}\n            setEditingTask={setEditingTask}\n            setShowEditTaskModal={setShowEditTaskModal}\n            activeFilters={activeFilters}\n            setActiveFilters={setActiveFilters}\n            sortBy={sortBy}\n            setSortBy={setSortBy}\n            groupBy={groupBy}\n            setGroupBy={setGroupBy}\n            selectedProjects={selectedProjects}\n            setSelectedProjects={setSelectedProjects}\n            availableProjects={availableProjects}\n          />\n        );\n      case \"settings\":\n        return (\n          <Settings\n            todoistToken={todoistToken}\n            setTodoistToken={setTodoistToken}\n            handleSaveTodoistToken={handleSaveTodoistToken}\n            todoistError={todoistError}\n            googleCalendarToken={googleCalendarToken}\n            setGoogleCalendarToken={setGoogleCalendarToken}\n            handleGoogleAuthClick={handleGoogleAuthClick}\n            googleCalendarError={googleCalendarError}\n            loadingGoogleCalendarEvents={loadingGoogleCalendarEvents}\n            claudeApiKey={claudeApiKey}\n            setClaudeApiKey={setClaudeApiKey}\n            handleSaveClaudeApiKey={handleSaveClaudeApiKey}\n            claudeApiError={claudeApiError}\n            loadingTodoistTasks={loadingTodoistTasks}\n          />\n        );\n      default:\n        return (\n          <div className=\"p-6 flex items-center justify-center h-full\">\n            <div className=\"text-center\">\n              <div className=\"w-16 h-16 bg-gray-200 rounded-full flex items-center justify-center mx-auto mb-4\">\n                <Calendar className=\"w-8 h-8 text-gray-500\" />\n              </div>\n              <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">\n                Coming Soon\n              </h3>\n              <p className=\"text-gray-600\">\n                This feature is under development.\n              </p>\n            </div>\n          </div>\n        );\n    }\n  };\n\n  const onDragEnd = React.useCallback(\n    (result) => {\n      const { destination, draggableId, source } = result;\n\n      if (!destination) {\n        return;\n      }\n\n      // If dropped in the same position, do nothing\n      if (\n        destination.droppableId === source.droppableId &&\n        destination.index === source.index\n      ) {\n        return;\n      }\n\n      // Handle different modes\n      if (plannerMode === \"recipes\") {\n        if (destination.droppableId === \"unscheduled-recipes\") {\n          // Dragged back to sidebar - remove from schedule\n          if (DEBUG) console.log(\"Removing recipe from schedule:\", draggableId);\n          setScheduledRecipes((prev) => {\n            const newScheduled = { ...prev };\n            Object.keys(newScheduled).forEach((dateKey) => {\n              if (\n                newScheduled[dateKey] &&\n                typeof newScheduled[dateKey] === \"object\"\n              ) {\n                Object.keys(newScheduled[dateKey]).forEach((mealType) => {\n                  if (Array.isArray(newScheduled[dateKey][mealType])) {\n                    newScheduled[dateKey][mealType] = newScheduled[dateKey][\n                      mealType\n                    ].filter((id) => id !== draggableId);\n                  }\n                });\n              }\n            });\n            if (DEBUG)\n              console.log(\"After removal, scheduled recipes:\", newScheduled);\n            return newScheduled;\n          });\n          return;\n        }\n\n        // Handle recipe scheduling - expect format like \"2025-01-01-lunch\"\n        const parts = destination.droppableId.split(\"-\");\n        if (parts.length >= 4) {\n          const dateKey = `${parts[0]}-${parts[1]}-${parts[2]}`;\n          const mealType = parts[3];\n\n          if (DEBUG)\n            console.log(\n              \"Scheduling recipe:\",\n              draggableId,\n              \"to\",\n              dateKey,\n              mealType,\n            );\n\n          setScheduledRecipes((prev) => {\n            const newScheduled = { ...prev };\n\n            // Remove from any existing dates/meals first\n            Object.keys(newScheduled).forEach((existingDateKey) => {\n              if (\n                newScheduled[existingDateKey] &&\n                typeof newScheduled[existingDateKey] === \"object\"\n              ) {\n                Object.keys(newScheduled[existingDateKey]).forEach(\n                  (existingMealType) => {\n                    if (\n                      Array.isArray(\n                        newScheduled[existingDateKey][existingMealType],\n                      )\n                    ) {\n                      newScheduled[existingDateKey][existingMealType] =\n                        newScheduled[existingDateKey][existingMealType].filter(\n                          (id) => id !== draggableId,\n                        );\n                    }\n                  },\n                );\n              }\n            });\n\n            // Add to new date/meal at the specific index\n            if (!newScheduled[dateKey]) {\n              newScheduled[dateKey] = { lunch: [], dinner: [] };\n            }\n            if (!newScheduled[dateKey][mealType]) {\n              newScheduled[dateKey][mealType] = [];\n            }\n\n            // Insert at the specific index instead of just pushing\n            const targetArray = [...newScheduled[dateKey][mealType]];\n            targetArray.splice(destination.index, 0, draggableId);\n            newScheduled[dateKey][mealType] = targetArray;\n\n            if (DEBUG) console.log(\"Updated scheduled recipes:\", newScheduled);\n            return newScheduled;\n          });\n          return;\n        } else {\n          console.error(\n            \"Invalid droppable ID format for recipes:\",\n            destination.droppableId,\n          );\n          return;\n        }\n      }\n\n      if (plannerMode === \"workouts\") {\n        if (destination.droppableId === \"unscheduled-workouts\") {\n          // Dragged back to sidebar - remove from schedule\n          setScheduledWorkouts((prev) => {\n            const newScheduled = { ...prev };\n            Object.keys(newScheduled).forEach((dateKey) => {\n              newScheduled[dateKey] = newScheduled[dateKey].filter(\n                (id) => id !== draggableId,\n              );\n            });\n            return newScheduled;\n          });\n          return;\n        }\n\n        // Handle workout scheduling - droppableId should be the date key\n        let dateKey = destination.droppableId;\n\n        // Handle the case where the droppableId includes \"-workouts\" suffix\n        if (dateKey.endsWith(\"-workouts\")) {\n          const parts = dateKey.split(\"-\");\n          if (parts.length >= 4) {\n            dateKey = `${parts[0]}-${parts[1]}-${parts[2]}`;\n          }\n        }\n\n        setScheduledWorkouts((prev) => {\n          const newScheduled = { ...prev };\n\n          // Remove from any existing dates first\n          Object.keys(newScheduled).forEach((existingDateKey) => {\n            newScheduled[existingDateKey] = newScheduled[\n              existingDateKey\n            ].filter((id) => id !== draggableId);\n          });\n\n          // Add to new date at the specific index\n          if (!newScheduled[dateKey]) {\n            newScheduled[dateKey] = [];\n          }\n\n          const targetArray = [...newScheduled[dateKey]];\n          targetArray.splice(destination.index, 0, draggableId);\n          newScheduled[dateKey] = targetArray;\n\n          return newScheduled;\n        });\n        return;\n      }\n\n      if (plannerMode === \"all\") {\n        // Handle different droppable types in \"all\" mode\n        if (destination.droppableId === \"unscheduled-all\") {\n          // Dragged back to sidebar - remove from all schedules\n          const isRecipe = mockRecipes.some((r) => r.id === draggableId);\n          const isWorkout = mockWorkouts.some((w) => w.id === draggableId);\n\n          if (isRecipe) {\n            setScheduledRecipes((prev) => {\n              const newScheduled = { ...prev };\n              Object.keys(newScheduled).forEach((dateKey) => {\n                if (\n                  newScheduled[dateKey] &&\n                  typeof newScheduled[dateKey] === \"object\"\n                ) {\n                  Object.keys(newScheduled[dateKey]).forEach((mealType) => {\n                    if (Array.isArray(newScheduled[dateKey][mealType])) {\n                      newScheduled[dateKey][mealType] = newScheduled[dateKey][\n                        mealType\n                      ].filter((id) => id !== draggableId);\n                    }\n                  });\n                }\n              });\n              return newScheduled;\n            });\n          } else if (isWorkout) {\n            setScheduledWorkouts((prev) => {\n              const newScheduled = { ...prev };\n              Object.keys(newScheduled).forEach((dateKey) => {\n                newScheduled[dateKey] = newScheduled[dateKey].filter(\n                  (id) => id !== draggableId,\n                );\n              });\n              return newScheduled;\n            });\n          } else {\n            // It's a task\n            handleTaskDrop(draggableId, null, destination.index);\n          }\n          return;\n        }\n\n        // Handle drops to specific day containers with meal types or workouts\n        const parts = destination.droppableId.split(\"-\");\n        if (\n          parts.length >= 4 &&\n          (parts[3] === \"lunch\" || parts[3] === \"dinner\")\n        ) {\n          // Recipe drop with meal type (e.g., \"2025-01-01-lunch\")\n          const dateKey = `${parts[0]}-${parts[1]}-${parts[2]}`;\n          const mealType = parts[3];\n\n          setScheduledRecipes((prev) => {\n            const newScheduled = { ...prev };\n            // Remove from existing locations\n            Object.keys(newScheduled).forEach((existingDateKey) => {\n              if (\n                newScheduled[existingDateKey] &&\n                typeof newScheduled[existingDateKey] === \"object\"\n              ) {\n                Object.keys(newScheduled[existingDateKey]).forEach(\n                  (existingMealType) => {\n                    if (\n                      Array.isArray(\n                        newScheduled[existingDateKey][existingMealType],\n                      )\n                    ) {\n                      newScheduled[existingDateKey][existingMealType] =\n                        newScheduled[existingDateKey][existingMealType].filter(\n                          (id) => id !== draggableId,\n                        );\n                    }\n                  },\n                );\n              }\n            });\n            // Add to new location at specific index\n            if (!newScheduled[dateKey]) {\n              newScheduled[dateKey] = { lunch: [], dinner: [] };\n            }\n            if (!newScheduled[dateKey][mealType]) {\n              newScheduled[dateKey][mealType] = [];\n            }\n\n            const targetArray = [...newScheduled[dateKey][mealType]];\n            targetArray.splice(destination.index, 0, draggableId);\n            newScheduled[dateKey][mealType] = targetArray;\n            return newScheduled;\n          });\n        } else if (parts.length >= 4 && parts[3] === \"workouts\") {\n          // Workout drop (e.g., \"2025-01-01-workouts\")\n          const dateKey = `${parts[0]}-${parts[1]}-${parts[2]}`;\n\n          setScheduledWorkouts((prev) => {\n            const newScheduled = { ...prev };\n            // Remove from existing locations\n            Object.keys(newScheduled).forEach((existingDateKey) => {\n              newScheduled[existingDateKey] = newScheduled[\n                existingDateKey\n              ].filter((id) => id !== draggableId);\n            });\n            // Add to new location at specific index\n            if (!newScheduled[dateKey]) {\n              newScheduled[dateKey] = [];\n            }\n\n            const targetArray = [...newScheduled[dateKey]];\n            targetArray.splice(destination.index, 0, draggableId);\n            newScheduled[dateKey] = targetArray;\n            return newScheduled;\n          });\n        } else {\n          try {\n            // Task drop to a date\n            const destDate = parseDateKey(destination.droppableId);\n            if (isNaN(destDate.getTime())) {\n              console.error(\n                \"Invalid date for task scheduling:\",\n                destination.droppableId,\n              );\n              return;\n            }\n            handleTaskDrop(draggableId, destDate, destination.index);\n          } catch (error) {\n            console.error(\"Error handling task drop:\", error);\n          }\n          return;\n        }\n      }\n\n      // Default task mode handling (if not in 'all' mode)\n      if (destination.droppableId === \"unscheduled\") {\n        handleTaskDrop(draggableId, null, destination.index);\n        return;\n      }\n\n      try {\n        const destDate = parseDateKey(destination.droppableId);\n        if (isNaN(destDate.getTime())) {\n          console.error(\n            \"Invalid date for task scheduling:\",\n            destination.droppableId,\n          );\n          return;\n        }\n        handleTaskDrop(draggableId, destDate, destination.index);\n      } catch (error) {\n        console.error(\"Error handling task drop:\", error);\n      }\n    },\n    [\n      plannerMode,\n      setScheduledRecipes,\n      setScheduledWorkouts,\n      handleTaskDrop,\n    ],\n  );\n\n  // Prepare app state and actions for Claude integration\n  const appState = {\n    activeView,\n    selectedDate,\n    tasks,\n    scheduledRecipes,\n    scheduledWorkouts,\n    scratchpadContent,\n    dayTaskFilter,\n    activeFilters,\n    taskFilter,\n    todoistToken,\n    googleCalendarToken,\n    availableProjects,\n    currentWeekStart\n  };\n\n  const appActions = {\n    setActiveView,\n    setSelectedDate,\n    setScratchpadContent,\n    setDayTaskFilter,\n    setActiveFilters,\n    setTaskFilter,\n    setScheduledRecipes,\n    setScheduledWorkouts,\n    handleAddTask,\n    handleEditTask,\n    handleDeleteTask,\n    handleTaskCompletionToggle,\n    fetchTodoistTasks,\n    navigateWeek: navigateWeek\n  };\n\n  return (\n    <DragDropContext onDragEnd={onDragEnd}>\n      <div className=\"flex h-screen bg-gray-50\">\n        {/* Sidebar */}\n        <Sidebar\n          activeView={activeView}\n          setActiveView={setActiveView}\n          isCollapsed={isSidebarCollapsed}\n          setIsCollapsed={setIsSidebarCollapsed}\n          toggleClaudeSidebar={() => setIsClaudeSidebarOpen(!isClaudeSidebarOpen)}\n        />\n\n        {/* Main Content and Claude Assistant Sidebar within a single ClaudeProvider */}\n        <ClaudeProvider appState={appState} appActions={appActions}>\n          <div className=\"flex-1 flex overflow-hidden\" style={{ marginRight: isClaudeSidebarOpen ? `${claudeSidebarWidth}px` : '0px' }}>\n            <main className=\"flex-1 overflow-y-auto\">\n              {renderContent()}\n            </main>\n\n            {/* Claude Assistant Sidebar */}\n            {isClaudeSidebarOpen && (\n              <div\n                className=\"fixed right-0 top-0 h-full bg-white shadow-lg flex-shrink-0\"\n                style={{ width: `${claudeSidebarWidth}px` }}\n              >\n                <ClaudeAssistant toggleSidebar={() => setIsClaudeSidebarOpen(false)} />\n                {/* Resizer Handle */}\n                <div\n                  className=\"absolute left-0 top-0 h-full w-2 cursor-ew-resize\"\n                  onMouseDown={(e) => {\n                    e.preventDefault();\n                    const startX = e.clientX;\n                    const startWidth = claudeSidebarWidth;\n\n                    const doMouseMove = (mouseMoveEvent) => {\n                      const newWidth = startWidth - (mouseMoveEvent.clientX - startX);\n                      setClaudeSidebarWidth(Math.max(250, Math.min(800, newWidth))); // Min 250px, Max 800px\n                    };\n\n                    const doMouseUp = () => {\n                      document.removeEventListener('mousemove', doMouseMove);\n                      document.removeEventListener('mouseup', doMouseUp);\n                    };\n\n                    document.addEventListener('mousemove', doMouseMove);\n                    document.addEventListener('mouseup', doMouseUp);\n                  }}\n                />\n              </div>\n            )}\n          </div>\n        </ClaudeProvider>\n\n        {/* Modals */}\n        {showEditTaskModal && editingTask && (\n          <EditTaskModal\n            task={editingTask}\n            onSave={handleEditTask}\n            onClose={() => {\n              setShowEditTaskModal(false);\n              setEditingTask(null);\n            }}\n          />\n        )}\n\n        {showEditEventModal && editingEvent && (\n          <EditEventModal\n            event={editingEvent}\n            onSave={(eventId, updates) => {\n              // Handle event updates here\n              console.log(\"Event update:\", eventId, updates);\n              setShowEditEventModal(false);\n              setEditingEvent(null);\n            }}\n            onClose={() => {\n              setShowEditEventModal(false);\n              setEditingEvent(null);\n            }}\n          />\n        )}\n      </div>\n    </DragDropContext>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}