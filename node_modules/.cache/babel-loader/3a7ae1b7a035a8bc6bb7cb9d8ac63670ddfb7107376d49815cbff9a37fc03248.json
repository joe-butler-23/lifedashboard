{"ast":null,"code":"var _jsxFileName = \"/home/joebutler/Downloads/lifesync-master/src/hooks/useClaudeIntegration.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { useCallback, useContext, createContext } from 'react';\nimport ClaudeService from '../services/ClaudeService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ClaudeContext = /*#__PURE__*/createContext();\nexport const useClaudeIntegration = () => {\n  _s();\n  const context = useContext(ClaudeContext);\n  if (!context) {\n    throw new Error('useClaudeIntegration must be used within ClaudeProvider');\n  }\n  return context;\n};\n_s(useClaudeIntegration, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const ClaudeProvider = ({\n  children,\n  appState,\n  appActions\n}) => {\n  _s2();\n  const askClaude = useCallback(async (query, componentContext = null) => {\n    try {\n      // Prepare comprehensive app context\n      const fullContext = {\n        currentView: appState.activeView,\n        selectedDate: appState.selectedDate,\n        tasks: appState.tasks,\n        scheduledRecipes: appState.scheduledRecipes,\n        scheduledWorkouts: appState.scheduledWorkouts,\n        scratchpadContent: appState.scratchpadContent,\n        filters: {\n          dayTaskFilter: appState.dayTaskFilter,\n          activeFilters: Array.from(appState.activeFilters || []),\n          taskFilter: appState.taskFilter\n        },\n        integrations: {\n          todoistConnected: !!appState.todoistToken,\n          googleCalendarConnected: !!appState.googleCalendarToken\n        },\n        componentContext\n      };\n      const response = await ClaudeService.analyzeAppState(fullContext, query);\n\n      // Execute actions returned by Claude\n      if (response.actions) {\n        for (const action of response.actions) {\n          await executeAction(action, appActions);\n        }\n      }\n      return response;\n    } catch (error) {\n      console.error('Claude integration error:', error);\n      return {\n        response: \"I'm sorry, I encountered an error. Please try again.\",\n        actions: [],\n        insights: []\n      };\n    }\n  }, [appState, appActions]);\n  const getContextualHelp = useCallback(async (component, componentState, query) => {\n    try {\n      return await ClaudeService.getContextualHelp(component, componentState, query);\n    } catch (error) {\n      console.error('Contextual help error:', error);\n      return {\n        response: \"I'm sorry, I couldn't provide help at this time.\",\n        actions: []\n      };\n    }\n  }, []);\n  const value = {\n    askClaude,\n    getContextualHelp\n  };\n  return /*#__PURE__*/_jsxDEV(ClaudeContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n\n// Action executor\n_s2(ClaudeProvider, \"hgJGB0efxxrlfeUPSjWmSmwvXAo=\");\n_c = ClaudeProvider;\nconst executeAction = async (action, appActions) => {\n  const {\n    type,\n    payload\n  } = action;\n  switch (type) {\n    case 'NAVIGATE':\n      appActions.setActiveView(payload.view);\n      break;\n    case 'SET_DATE':\n      appActions.setSelectedDate(new Date(payload.date));\n      break;\n    case 'ADD_TASK':\n      await appActions.handleAddTask(payload);\n      break;\n    case 'UPDATE_TASK':\n      await appActions.handleEditTask(payload.taskId, payload.updates);\n      break;\n    case 'SCHEDULE_RECIPE':\n      appActions.setScheduledRecipes(prev => {\n        var _prev$payload$date;\n        return {\n          ...prev,\n          [payload.date]: {\n            ...prev[payload.date],\n            [payload.mealType]: [...(((_prev$payload$date = prev[payload.date]) === null || _prev$payload$date === void 0 ? void 0 : _prev$payload$date[payload.mealType]) || []), payload.recipeId]\n          }\n        };\n      });\n      break;\n    case 'SCHEDULE_WORKOUT':\n      appActions.setScheduledWorkouts(prev => ({\n        ...prev,\n        [payload.date]: [...(prev[payload.date] || []), payload.workoutId]\n      }));\n      break;\n    case 'UPDATE_SCRATCHPAD':\n      appActions.setScratchpadContent(payload.content);\n      const dateKey = payload.date || new Date().toLocaleDateString('en-CA');\n      localStorage.setItem(`scratchpad-${dateKey}`, payload.content);\n      break;\n    case 'APPLY_FILTER':\n      if (payload.filterType === 'tasks') {\n        appActions.setActiveFilters(new Set([payload.filter]));\n      } else if (payload.filterType === 'day') {\n        appActions.setDayTaskFilter(payload.filter);\n      }\n      break;\n    default:\n      console.warn('Unknown action type:', type);\n  }\n};\nvar _c;\n$RefreshReg$(_c, \"ClaudeProvider\");","map":{"version":3,"names":["useCallback","useContext","createContext","ClaudeService","jsxDEV","_jsxDEV","ClaudeContext","useClaudeIntegration","_s","context","Error","ClaudeProvider","children","appState","appActions","_s2","askClaude","query","componentContext","fullContext","currentView","activeView","selectedDate","tasks","scheduledRecipes","scheduledWorkouts","scratchpadContent","filters","dayTaskFilter","activeFilters","Array","from","taskFilter","integrations","todoistConnected","todoistToken","googleCalendarConnected","googleCalendarToken","response","analyzeAppState","actions","action","executeAction","error","console","insights","getContextualHelp","component","componentState","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","type","payload","setActiveView","view","setSelectedDate","Date","date","handleAddTask","handleEditTask","taskId","updates","setScheduledRecipes","prev","_prev$payload$date","mealType","recipeId","setScheduledWorkouts","workoutId","setScratchpadContent","content","dateKey","toLocaleDateString","localStorage","setItem","filterType","setActiveFilters","Set","filter","setDayTaskFilter","warn","$RefreshReg$"],"sources":["/home/joebutler/Downloads/lifesync-master/src/hooks/useClaudeIntegration.js"],"sourcesContent":["\nimport { useCallback, useContext, createContext } from 'react';\nimport ClaudeService from '../services/ClaudeService';\n\nconst ClaudeContext = createContext();\n\nexport const useClaudeIntegration = () => {\n  const context = useContext(ClaudeContext);\n  if (!context) {\n    throw new Error('useClaudeIntegration must be used within ClaudeProvider');\n  }\n  return context;\n};\n\nexport const ClaudeProvider = ({ children, appState, appActions }) => {\n  const askClaude = useCallback(async (query, componentContext = null) => {\n    try {\n      // Prepare comprehensive app context\n      const fullContext = {\n        currentView: appState.activeView,\n        selectedDate: appState.selectedDate,\n        tasks: appState.tasks,\n        scheduledRecipes: appState.scheduledRecipes,\n        scheduledWorkouts: appState.scheduledWorkouts,\n        scratchpadContent: appState.scratchpadContent,\n        filters: {\n          dayTaskFilter: appState.dayTaskFilter,\n          activeFilters: Array.from(appState.activeFilters || []),\n          taskFilter: appState.taskFilter\n        },\n        integrations: {\n          todoistConnected: !!appState.todoistToken,\n          googleCalendarConnected: !!appState.googleCalendarToken\n        },\n        componentContext\n      };\n\n      const response = await ClaudeService.analyzeAppState(fullContext, query);\n      \n      // Execute actions returned by Claude\n      if (response.actions) {\n        for (const action of response.actions) {\n          await executeAction(action, appActions);\n        }\n      }\n\n      return response;\n    } catch (error) {\n      console.error('Claude integration error:', error);\n      return {\n        response: \"I'm sorry, I encountered an error. Please try again.\",\n        actions: [],\n        insights: []\n      };\n    }\n  }, [appState, appActions]);\n\n  const getContextualHelp = useCallback(async (component, componentState, query) => {\n    try {\n      return await ClaudeService.getContextualHelp(component, componentState, query);\n    } catch (error) {\n      console.error('Contextual help error:', error);\n      return {\n        response: \"I'm sorry, I couldn't provide help at this time.\",\n        actions: []\n      };\n    }\n  }, []);\n\n  const value = {\n    askClaude,\n    getContextualHelp\n  };\n\n  return (\n    <ClaudeContext.Provider value={value}>\n      {children}\n    </ClaudeContext.Provider>\n  );\n};\n\n// Action executor\nconst executeAction = async (action, appActions) => {\n  const { type, payload } = action;\n\n  switch (type) {\n    case 'NAVIGATE':\n      appActions.setActiveView(payload.view);\n      break;\n    \n    case 'SET_DATE':\n      appActions.setSelectedDate(new Date(payload.date));\n      break;\n    \n    case 'ADD_TASK':\n      await appActions.handleAddTask(payload);\n      break;\n    \n    case 'UPDATE_TASK':\n      await appActions.handleEditTask(payload.taskId, payload.updates);\n      break;\n    \n    case 'SCHEDULE_RECIPE':\n      appActions.setScheduledRecipes(prev => ({\n        ...prev,\n        [payload.date]: {\n          ...prev[payload.date],\n          [payload.mealType]: [\n            ...(prev[payload.date]?.[payload.mealType] || []),\n            payload.recipeId\n          ]\n        }\n      }));\n      break;\n    \n    case 'SCHEDULE_WORKOUT':\n      appActions.setScheduledWorkouts(prev => ({\n        ...prev,\n        [payload.date]: [\n          ...(prev[payload.date] || []),\n          payload.workoutId\n        ]\n      }));\n      break;\n    \n    case 'UPDATE_SCRATCHPAD':\n      appActions.setScratchpadContent(payload.content);\n      const dateKey = payload.date || new Date().toLocaleDateString('en-CA');\n      localStorage.setItem(`scratchpad-${dateKey}`, payload.content);\n      break;\n    \n    case 'APPLY_FILTER':\n      if (payload.filterType === 'tasks') {\n        appActions.setActiveFilters(new Set([payload.filter]));\n      } else if (payload.filterType === 'day') {\n        appActions.setDayTaskFilter(payload.filter);\n      }\n      break;\n    \n    default:\n      console.warn('Unknown action type:', type);\n  }\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}