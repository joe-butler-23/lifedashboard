{"ast":null,"code":"var _jsxFileName = \"/home/joebutler/Downloads/lifesync-master/src/components/OutlinerEditor.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { ChevronRight, ChevronDown, Plus, Home } from 'lucide-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OutlinerEditor = ({\n  content,\n  onChange\n}) => {\n  _s();\n  const [data, setData] = useState(() => {\n    try {\n      return content ? JSON.parse(content) : {\n        id: 'root',\n        content: '',\n        children: []\n      };\n    } catch {\n      return {\n        id: 'root',\n        content: '',\n        children: []\n      };\n    }\n  });\n  const [expandedNodes, setExpandedNodes] = useState(new Set(['1', '1-1', '2']));\n  const [currentView, setCurrentView] = useState(['root']);\n  const [editingNode, setEditingNode] = useState(null);\n  const inputRefs = useRef({});\n\n  // Notify parent of changes\n  useEffect(() => {\n    if (onChange) {\n      onChange(JSON.stringify(data));\n    }\n  }, [data, onChange]);\n\n  // Get current node being viewed\n  const getCurrentNode = () => {\n    let current = data;\n    for (let i = 1; i < currentView.length; i++) {\n      current = current.children.find(child => child.id === currentView[i]);\n    }\n    return current;\n  };\n\n  // Get breadcrumb path\n  const getBreadcrumbs = () => {\n    const breadcrumbs = [];\n    let current = data;\n    for (let i = 0; i < currentView.length; i++) {\n      if (i === 0) {\n        breadcrumbs.push({\n          id: 'root',\n          content: 'Home'\n        });\n      } else {\n        current = current.children.find(child => child.id === currentView[i]);\n        if (current) {\n          breadcrumbs.push({\n            id: current.id,\n            content: current.content\n          });\n        }\n      }\n    }\n    return breadcrumbs;\n  };\n\n  // Toggle node expansion\n  const toggleExpanded = nodeId => {\n    const newExpanded = new Set(expandedNodes);\n    if (newExpanded.has(nodeId)) {\n      newExpanded.delete(nodeId);\n    } else {\n      newExpanded.add(nodeId);\n    }\n    setExpandedNodes(newExpanded);\n  };\n\n  // Zoom into a node\n  const zoomInto = nodeId => {\n    // Build the full path to this node\n    const findNodePath = (searchNode, targetId, currentPath = ['root']) => {\n      if (searchNode.id === targetId) {\n        return currentPath;\n      }\n      for (const child of searchNode.children) {\n        const childPath = [...currentPath, child.id];\n        if (child.id === targetId) {\n          return childPath;\n        }\n        const foundPath = findNodePath(child, targetId, childPath);\n        if (foundPath) {\n          return foundPath;\n        }\n      }\n      return null;\n    };\n    const fullPath = findNodePath(data, nodeId);\n    if (fullPath) {\n      setCurrentView(fullPath);\n    }\n  };\n\n  // Navigate breadcrumb\n  const navigateTo = index => {\n    setCurrentView(currentView.slice(0, index + 1));\n  };\n\n  // Update node content\n  const updateNodeContent = (nodeId, newContent) => {\n    const updateNode = node => {\n      if (node.id === nodeId) {\n        return {\n          ...node,\n          content: newContent\n        };\n      }\n      return {\n        ...node,\n        children: node.children.map(updateNode)\n      };\n    };\n    setData(updateNode(data));\n  };\n\n  // Add new node\n  const addNode = (parentId, afterId = null) => {\n    const newId = Date.now().toString();\n    const newNode = {\n      id: newId,\n      content: '',\n      children: []\n    };\n    const addToNode = node => {\n      if (node.id === parentId) {\n        const newChildren = [...node.children];\n        if (afterId) {\n          const index = newChildren.findIndex(child => child.id === afterId);\n          newChildren.splice(index + 1, 0, newNode);\n        } else {\n          newChildren.push(newNode);\n        }\n        return {\n          ...node,\n          children: newChildren\n        };\n      }\n      return {\n        ...node,\n        children: node.children.map(addToNode)\n      };\n    };\n    setData(addToNode(data));\n    setEditingNode(newId);\n\n    // Ensure parent is expanded\n    setExpandedNodes(prev => new Set([...prev, parentId]));\n    return newId;\n  };\n\n  // Indent node (move as child of previous sibling)\n  const indentNode = (nodeId, currentParentId) => {\n    const moveNode = node => {\n      if (node.id === currentParentId) {\n        const nodeIndex = node.children.findIndex(child => child.id === nodeId);\n        if (nodeIndex > 0) {\n          const nodeToMove = node.children[nodeIndex];\n          const newParent = node.children[nodeIndex - 1];\n\n          // Remove from current parent\n          const newChildren = [...node.children];\n          newChildren.splice(nodeIndex, 1);\n\n          // Add to previous sibling\n          const updatedPrevSibling = {\n            ...newParent,\n            children: [...newParent.children, nodeToMove]\n          };\n          newChildren[nodeIndex - 1] = updatedPrevSibling;\n\n          // Expand the new parent to show the moved node\n          setExpandedNodes(prev => new Set([...prev, newParent.id]));\n          return {\n            ...node,\n            children: newChildren\n          };\n        }\n      }\n      return {\n        ...node,\n        children: node.children.map(moveNode)\n      };\n    };\n    setData(moveNode(data));\n  };\n\n  // Unindent node (move to parent's parent)\n  const unindentNode = (nodeId, currentParentId) => {\n    const moveNode = (node, grandParentId = null) => {\n      // Find if this node contains the parent\n      const parentIndex = node.children.findIndex(child => child.id === currentParentId);\n      if (parentIndex >= 0) {\n        const parent = node.children[parentIndex];\n        const nodeIndex = parent.children.findIndex(child => child.id === nodeId);\n        if (nodeIndex >= 0) {\n          const nodeToMove = parent.children[nodeIndex];\n\n          // Remove from current parent\n          const updatedParent = {\n            ...parent,\n            children: parent.children.filter(child => child.id !== nodeId)\n          };\n\n          // Add to grandparent after the parent\n          const newChildren = [...node.children];\n          newChildren[parentIndex] = updatedParent;\n          newChildren.splice(parentIndex + 1, 0, nodeToMove);\n          return {\n            ...node,\n            children: newChildren\n          };\n        }\n      }\n      return {\n        ...node,\n        children: node.children.map(child => moveNode(child, node.id))\n      };\n    };\n    setData(moveNode(data));\n  };\n\n  // Handle key events\n  const handleKeyDown = (e, nodeId, parentId) => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      addNode(parentId, nodeId);\n      // Focus will be set in the addNode function\n    } else if (e.key === 'Tab') {\n      e.preventDefault();\n      if (e.shiftKey) {\n        // Shift+Tab: unindent\n        unindentNode(nodeId, parentId);\n        // Keep focus on current node after unindent\n        setTimeout(() => {\n          if (inputRefs.current[nodeId]) {\n            inputRefs.current[nodeId].focus();\n          }\n        }, 0);\n      } else {\n        // Tab: indent\n        indentNode(nodeId, parentId);\n        // Keep focus on current node after indent\n        setTimeout(() => {\n          if (inputRefs.current[nodeId]) {\n            inputRefs.current[nodeId].focus();\n          }\n        }, 0);\n      }\n    } else if (e.key === 'Escape') {\n      setEditingNode(null);\n      // Navigate back to root view\n      setCurrentView(['root']);\n    }\n  };\n\n  // Focus input when editing starts or changes\n  useEffect(() => {\n    if (editingNode && inputRefs.current[editingNode]) {\n      const input = inputRefs.current[editingNode];\n      input.focus();\n      // Set cursor to end of text\n      input.setSelectionRange(input.value.length, input.value.length);\n    }\n  }, [editingNode, data]); // Also trigger when data changes\n\n  // Render a single node\n  const renderNode = (node, parentId = null, depth = 0) => {\n    const hasChildren = node.children && node.children.length > 0;\n    const isExpanded = expandedNodes.has(node.id);\n    const isEditing = editingNode === node.id;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"select-none\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center group hover:bg-gray-50 rounded-sm transition-colors\",\n        style: {\n          paddingLeft: `${depth * 20}px`\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => toggleExpanded(node.id),\n          className: `p-1 rounded hover:bg-gray-200 transition-colors ${hasChildren ? 'opacity-100' : 'opacity-0'}`,\n          style: {\n            width: '20px',\n            height: '20px'\n          },\n          children: hasChildren && (isExpanded ? /*#__PURE__*/_jsxDEV(ChevronDown, {\n            size: 12\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(ChevronRight, {\n            size: 12\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => hasChildren && zoomInto(node.id),\n          className: `flex items-center justify-center w-4 h-4 mr-2 rounded-full transition-colors ${hasChildren ? 'hover:bg-blue-100 cursor-pointer' : 'cursor-default'}`,\n          title: hasChildren ? \"Click to zoom in\" : \"\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `w-1.5 h-1.5 rounded-full transition-colors ${hasChildren ? 'bg-blue-500 hover:bg-blue-600' : 'bg-gray-400'}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-1 py-1\",\n          children: isEditing ? /*#__PURE__*/_jsxDEV(\"input\", {\n            ref: el => inputRefs.current[node.id] = el,\n            type: \"text\",\n            value: node.content,\n            onChange: e => updateNodeContent(node.id, e.target.value),\n            onBlur: e => {\n              // Only blur if not immediately focusing another input\n              setTimeout(() => {\n                if (!document.activeElement || !document.activeElement.matches('input[type=\"text\"]')) {\n                  setEditingNode(null);\n                }\n              }, 0);\n            },\n            onKeyDown: e => handleKeyDown(e, node.id, parentId),\n            className: \"w-full bg-transparent border-none outline-none text-gray-900\",\n            placeholder: \"Type something...\",\n            autoFocus: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: () => {\n              setEditingNode(node.id);\n            },\n            className: \"cursor-text text-gray-900 min-h-[20px] py-0.5\",\n            children: node.content || /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-gray-400 italic\",\n              children: \"Click to edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 340,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"opacity-0 group-hover:opacity-100 transition-opacity flex items-center space-x-1\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => addNode(node.id),\n            className: \"p-1 rounded hover:bg-gray-200 transition-colors\",\n            title: \"Add child\",\n            children: /*#__PURE__*/_jsxDEV(Plus, {\n              size: 12\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 353,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 9\n      }, this), hasChildren && isExpanded && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: node.children.map(child => renderNode(child, node.id, depth + 1))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 11\n      }, this)]\n    }, node.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 7\n    }, this);\n  };\n  const currentNode = getCurrentNode();\n  const breadcrumbs = getBreadcrumbs();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-full bg-white h-full flex flex-col\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"border-b border-gray-200 p-3 bg-gray-50\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center space-x-2 text-sm\",\n        children: breadcrumbs.map((crumb, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: [index > 0 && /*#__PURE__*/_jsxDEV(ChevronRight, {\n            size: 14,\n            className: \"text-gray-400\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 380,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => navigateTo(index),\n            className: `px-2 py-1 rounded hover:bg-white hover:text-blue-600 transition-colors ${index === breadcrumbs.length - 1 ? 'text-gray-900 font-medium bg-white shadow-sm' : 'text-gray-600 hover:shadow-sm'}`,\n            children: index === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center space-x-1\",\n              children: [/*#__PURE__*/_jsxDEV(Home, {\n                size: 14\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 391,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Home\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 392,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 390,\n              columnNumber: 19\n            }, this) : crumb.content || 'Untitled'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 381,\n            columnNumber: 15\n          }, this)]\n        }, crumb.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 379,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-1 p-3 overflow-y-auto\",\n      children: currentNode && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-1\",\n        children: [currentNode.children.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-gray-500 italic py-4 text-center text-sm\",\n          children: currentView.length > 1 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-2\",\n              children: \"This item has no sub-items yet.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 412,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-xs\",\n              children: \"Click the + button below to add the first sub-item.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 413,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 411,\n            columnNumber: 19\n          }, this) : \"No items yet. Click the + button to add your first item.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 409,\n          columnNumber: 15\n        }, this) : currentNode.children.map(child => renderNode(child, currentNode.id)), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pt-2\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => addNode(currentNode.id),\n            className: \"flex items-center space-x-2 text-gray-500 hover:text-gray-700 transition-colors p-2 rounded hover:bg-gray-50 text-sm\",\n            children: [/*#__PURE__*/_jsxDEV(Plus, {\n              size: 14\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 431,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Add item\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 432,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 427,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 426,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 407,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 405,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 374,\n    columnNumber: 5\n  }, this);\n};\n_s(OutlinerEditor, \"ry1FK6JPMkYcB/6Rzc0hfOk+Qg4=\");\n_c = OutlinerEditor;\nexport default OutlinerEditor;\nvar _c;\n$RefreshReg$(_c, \"OutlinerEditor\");","map":{"version":3,"names":["React","useState","useRef","useEffect","ChevronRight","ChevronDown","Plus","Home","jsxDEV","_jsxDEV","OutlinerEditor","content","onChange","_s","data","setData","JSON","parse","id","children","expandedNodes","setExpandedNodes","Set","currentView","setCurrentView","editingNode","setEditingNode","inputRefs","stringify","getCurrentNode","current","i","length","find","child","getBreadcrumbs","breadcrumbs","push","toggleExpanded","nodeId","newExpanded","has","delete","add","zoomInto","findNodePath","searchNode","targetId","currentPath","childPath","foundPath","fullPath","navigateTo","index","slice","updateNodeContent","newContent","updateNode","node","map","addNode","parentId","afterId","newId","Date","now","toString","newNode","addToNode","newChildren","findIndex","splice","prev","indentNode","currentParentId","moveNode","nodeIndex","nodeToMove","newParent","updatedPrevSibling","unindentNode","grandParentId","parentIndex","parent","updatedParent","filter","handleKeyDown","e","key","shiftKey","preventDefault","setTimeout","focus","input","setSelectionRange","value","renderNode","depth","hasChildren","isExpanded","isEditing","className","style","paddingLeft","onClick","width","height","size","fileName","_jsxFileName","lineNumber","columnNumber","title","ref","el","type","target","onBlur","document","activeElement","matches","onKeyDown","placeholder","autoFocus","currentNode","crumb","Fragment","_c","$RefreshReg$"],"sources":["/home/joebutler/Downloads/lifesync-master/src/components/OutlinerEditor.jsx"],"sourcesContent":["\nimport React, { useState, useRef, useEffect } from 'react';\nimport { ChevronRight, ChevronDown, Plus, Home } from 'lucide-react';\n\nconst OutlinerEditor = ({ content, onChange }) => {\n  const [data, setData] = useState(() => {\n    try {\n      return content ? JSON.parse(content) : {\n        id: 'root',\n        content: '',\n        children: []\n      };\n    } catch {\n      return {\n        id: 'root',\n        content: '',\n        children: []\n      };\n    }\n  });\n\n  const [expandedNodes, setExpandedNodes] = useState(new Set(['1', '1-1', '2']));\n  const [currentView, setCurrentView] = useState(['root']);\n  const [editingNode, setEditingNode] = useState(null);\n\n  const inputRefs = useRef({});\n\n  // Notify parent of changes\n  useEffect(() => {\n    if (onChange) {\n      onChange(JSON.stringify(data));\n    }\n  }, [data, onChange]);\n\n  // Get current node being viewed\n  const getCurrentNode = () => {\n    let current = data;\n    for (let i = 1; i < currentView.length; i++) {\n      current = current.children.find(child => child.id === currentView[i]);\n    }\n    return current;\n  };\n\n  // Get breadcrumb path\n  const getBreadcrumbs = () => {\n    const breadcrumbs = [];\n    let current = data;\n    \n    for (let i = 0; i < currentView.length; i++) {\n      if (i === 0) {\n        breadcrumbs.push({ id: 'root', content: 'Home' });\n      } else {\n        current = current.children.find(child => child.id === currentView[i]);\n        if (current) {\n          breadcrumbs.push({ id: current.id, content: current.content });\n        }\n      }\n    }\n    return breadcrumbs;\n  };\n\n  // Toggle node expansion\n  const toggleExpanded = (nodeId) => {\n    const newExpanded = new Set(expandedNodes);\n    if (newExpanded.has(nodeId)) {\n      newExpanded.delete(nodeId);\n    } else {\n      newExpanded.add(nodeId);\n    }\n    setExpandedNodes(newExpanded);\n  };\n\n  // Zoom into a node\n  const zoomInto = (nodeId) => {\n    // Build the full path to this node\n    const findNodePath = (searchNode, targetId, currentPath = ['root']) => {\n      if (searchNode.id === targetId) {\n        return currentPath;\n      }\n      \n      for (const child of searchNode.children) {\n        const childPath = [...currentPath, child.id];\n        if (child.id === targetId) {\n          return childPath;\n        }\n        \n        const foundPath = findNodePath(child, targetId, childPath);\n        if (foundPath) {\n          return foundPath;\n        }\n      }\n      \n      return null;\n    };\n    \n    const fullPath = findNodePath(data, nodeId);\n    if (fullPath) {\n      setCurrentView(fullPath);\n    }\n  };\n\n  // Navigate breadcrumb\n  const navigateTo = (index) => {\n    setCurrentView(currentView.slice(0, index + 1));\n  };\n\n  // Update node content\n  const updateNodeContent = (nodeId, newContent) => {\n    const updateNode = (node) => {\n      if (node.id === nodeId) {\n        return { ...node, content: newContent };\n      }\n      return {\n        ...node,\n        children: node.children.map(updateNode)\n      };\n    };\n    setData(updateNode(data));\n  };\n\n  // Add new node\n  const addNode = (parentId, afterId = null) => {\n    const newId = Date.now().toString();\n    const newNode = { id: newId, content: '', children: [] };\n\n    const addToNode = (node) => {\n      if (node.id === parentId) {\n        const newChildren = [...node.children];\n        if (afterId) {\n          const index = newChildren.findIndex(child => child.id === afterId);\n          newChildren.splice(index + 1, 0, newNode);\n        } else {\n          newChildren.push(newNode);\n        }\n        return { ...node, children: newChildren };\n      }\n      return {\n        ...node,\n        children: node.children.map(addToNode)\n      };\n    };\n\n    setData(addToNode(data));\n    setEditingNode(newId);\n    \n    // Ensure parent is expanded\n    setExpandedNodes(prev => new Set([...prev, parentId]));\n    \n    return newId;\n  };\n\n  // Indent node (move as child of previous sibling)\n  const indentNode = (nodeId, currentParentId) => {\n    const moveNode = (node) => {\n      if (node.id === currentParentId) {\n        const nodeIndex = node.children.findIndex(child => child.id === nodeId);\n        if (nodeIndex > 0) {\n          const nodeToMove = node.children[nodeIndex];\n          const newParent = node.children[nodeIndex - 1];\n          \n          // Remove from current parent\n          const newChildren = [...node.children];\n          newChildren.splice(nodeIndex, 1);\n          \n          // Add to previous sibling\n          const updatedPrevSibling = {\n            ...newParent,\n            children: [...newParent.children, nodeToMove]\n          };\n          newChildren[nodeIndex - 1] = updatedPrevSibling;\n          \n          // Expand the new parent to show the moved node\n          setExpandedNodes(prev => new Set([...prev, newParent.id]));\n          \n          return { ...node, children: newChildren };\n        }\n      }\n      return {\n        ...node,\n        children: node.children.map(moveNode)\n      };\n    };\n    \n    setData(moveNode(data));\n  };\n\n  // Unindent node (move to parent's parent)\n  const unindentNode = (nodeId, currentParentId) => {\n    const moveNode = (node, grandParentId = null) => {\n      // Find if this node contains the parent\n      const parentIndex = node.children.findIndex(child => child.id === currentParentId);\n      if (parentIndex >= 0) {\n        const parent = node.children[parentIndex];\n        const nodeIndex = parent.children.findIndex(child => child.id === nodeId);\n        \n        if (nodeIndex >= 0) {\n          const nodeToMove = parent.children[nodeIndex];\n          \n          // Remove from current parent\n          const updatedParent = {\n            ...parent,\n            children: parent.children.filter(child => child.id !== nodeId)\n          };\n          \n          // Add to grandparent after the parent\n          const newChildren = [...node.children];\n          newChildren[parentIndex] = updatedParent;\n          newChildren.splice(parentIndex + 1, 0, nodeToMove);\n          \n          return { ...node, children: newChildren };\n        }\n      }\n      \n      return {\n        ...node,\n        children: node.children.map(child => moveNode(child, node.id))\n      };\n    };\n    \n    setData(moveNode(data));\n  };\n\n  // Handle key events\n  const handleKeyDown = (e, nodeId, parentId) => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      addNode(parentId, nodeId);\n      // Focus will be set in the addNode function\n    } else if (e.key === 'Tab') {\n      e.preventDefault();\n      if (e.shiftKey) {\n        // Shift+Tab: unindent\n        unindentNode(nodeId, parentId);\n        // Keep focus on current node after unindent\n        setTimeout(() => {\n          if (inputRefs.current[nodeId]) {\n            inputRefs.current[nodeId].focus();\n          }\n        }, 0);\n      } else {\n        // Tab: indent\n        indentNode(nodeId, parentId);\n        // Keep focus on current node after indent\n        setTimeout(() => {\n          if (inputRefs.current[nodeId]) {\n            inputRefs.current[nodeId].focus();\n          }\n        }, 0);\n      }\n    } else if (e.key === 'Escape') {\n      setEditingNode(null);\n      // Navigate back to root view\n      setCurrentView(['root']);\n    }\n  };\n\n  // Focus input when editing starts or changes\n  useEffect(() => {\n    if (editingNode && inputRefs.current[editingNode]) {\n      const input = inputRefs.current[editingNode];\n      input.focus();\n      // Set cursor to end of text\n      input.setSelectionRange(input.value.length, input.value.length);\n    }\n  }, [editingNode, data]); // Also trigger when data changes\n\n  // Render a single node\n  const renderNode = (node, parentId = null, depth = 0) => {\n    const hasChildren = node.children && node.children.length > 0;\n    const isExpanded = expandedNodes.has(node.id);\n    const isEditing = editingNode === node.id;\n\n    return (\n      <div key={node.id} className=\"select-none\">\n        <div \n          className=\"flex items-center group hover:bg-gray-50 rounded-sm transition-colors\"\n          style={{ paddingLeft: `${depth * 20}px` }}\n        >\n          {/* Toggle button */}\n          <button\n            onClick={() => toggleExpanded(node.id)}\n            className={`p-1 rounded hover:bg-gray-200 transition-colors ${\n              hasChildren ? 'opacity-100' : 'opacity-0'\n            }`}\n            style={{ width: '20px', height: '20px' }}\n          >\n            {hasChildren && (\n              isExpanded ? \n                <ChevronDown size={12} /> : \n                <ChevronRight size={12} />\n            )}\n          </button>\n\n          {/* Bullet point */}\n          <button\n            onClick={() => hasChildren && zoomInto(node.id)}\n            className={`flex items-center justify-center w-4 h-4 mr-2 rounded-full transition-colors ${\n              hasChildren \n                ? 'hover:bg-blue-100 cursor-pointer' \n                : 'cursor-default'\n            }`}\n            title={hasChildren ? \"Click to zoom in\" : \"\"}\n          >\n            <div className={`w-1.5 h-1.5 rounded-full transition-colors ${\n              hasChildren \n                ? 'bg-blue-500 hover:bg-blue-600' \n                : 'bg-gray-400'\n            }`}></div>\n          </button>\n\n          {/* Content */}\n          <div className=\"flex-1 py-1\">\n            {isEditing ? (\n              <input\n                ref={el => inputRefs.current[node.id] = el}\n                type=\"text\"\n                value={node.content}\n                onChange={(e) => updateNodeContent(node.id, e.target.value)}\n                onBlur={(e) => {\n                  // Only blur if not immediately focusing another input\n                  setTimeout(() => {\n                    if (!document.activeElement || !document.activeElement.matches('input[type=\"text\"]')) {\n                      setEditingNode(null);\n                    }\n                  }, 0);\n                }}\n                onKeyDown={(e) => handleKeyDown(e, node.id, parentId)}\n                className=\"w-full bg-transparent border-none outline-none text-gray-900\"\n                placeholder=\"Type something...\"\n                autoFocus\n              />\n            ) : (\n              <div\n                onClick={() => {\n                  setEditingNode(node.id);\n                }}\n                className=\"cursor-text text-gray-900 min-h-[20px] py-0.5\"\n              >\n                {node.content || (\n                  <span className=\"text-gray-400 italic\">Click to edit</span>\n                )}\n              </div>\n            )}\n          </div>\n\n          {/* Action buttons */}\n          <div className=\"opacity-0 group-hover:opacity-100 transition-opacity flex items-center space-x-1\">\n            <button\n              onClick={() => addNode(node.id)}\n              className=\"p-1 rounded hover:bg-gray-200 transition-colors\"\n              title=\"Add child\"\n            >\n              <Plus size={12} />\n            </button>\n          </div>\n        </div>\n\n        {/* Children */}\n        {hasChildren && isExpanded && (\n          <div>\n            {node.children.map(child => \n              renderNode(child, node.id, depth + 1)\n            )}\n          </div>\n        )}\n      </div>\n    );\n  };\n\n  const currentNode = getCurrentNode();\n  const breadcrumbs = getBreadcrumbs();\n\n  return (\n    <div className=\"w-full bg-white h-full flex flex-col\">\n      {/* Header with breadcrumbs */}\n      <div className=\"border-b border-gray-200 p-3 bg-gray-50\">\n        <div className=\"flex items-center space-x-2 text-sm\">\n          {breadcrumbs.map((crumb, index) => (\n            <React.Fragment key={crumb.id}>\n              {index > 0 && <ChevronRight size={14} className=\"text-gray-400\" />}\n              <button\n                onClick={() => navigateTo(index)}\n                className={`px-2 py-1 rounded hover:bg-white hover:text-blue-600 transition-colors ${\n                  index === breadcrumbs.length - 1 \n                    ? 'text-gray-900 font-medium bg-white shadow-sm' \n                    : 'text-gray-600 hover:shadow-sm'\n                }`}\n              >\n                {index === 0 ? (\n                  <div className=\"flex items-center space-x-1\">\n                    <Home size={14} />\n                    <span>Home</span>\n                  </div>\n                ) : (\n                  crumb.content || 'Untitled'\n                )}\n              </button>\n            </React.Fragment>\n          ))}\n          \n        </div>\n      </div>\n\n      {/* Main content */}\n      <div className=\"flex-1 p-3 overflow-y-auto\">\n        {currentNode && (\n          <div className=\"space-y-1\">\n            {currentNode.children.length === 0 ? (\n              <div className=\"text-gray-500 italic py-4 text-center text-sm\">\n                {currentView.length > 1 ? (\n                  <div>\n                    <div className=\"mb-2\">This item has no sub-items yet.</div>\n                    <div className=\"text-xs\">Click the + button below to add the first sub-item.</div>\n                  </div>\n                ) : (\n                  \"No items yet. Click the + button to add your first item.\"\n                )}\n              </div>\n            ) : (\n              currentNode.children.map(child => \n                renderNode(child, currentNode.id)\n              )\n            )}\n            \n            {/* Add root level item button */}\n            <div className=\"pt-2\">\n              <button\n                onClick={() => addNode(currentNode.id)}\n                className=\"flex items-center space-x-2 text-gray-500 hover:text-gray-700 transition-colors p-2 rounded hover:bg-gray-50 text-sm\"\n              >\n                <Plus size={14} />\n                <span>Add item</span>\n              </button>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default OutlinerEditor;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}